{
  "contractName": "TestContract",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "badgeId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum TestContract.State",
          "name": "status",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "BadgeClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "ItemPurchase",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "giftAmount",
          "type": "uint256"
        }
      ],
      "name": "ZoodleGifted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "giftAmount",
          "type": "uint256"
        }
      ],
      "name": "giftZoodle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getZoodle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getBadge",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "enum TestContract.State",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "badgeOwner",
              "type": "address"
            }
          ],
          "internalType": "struct TestContract.Badge",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getUpgrades",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "zoodleAccrued",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "upgradesAccrued",
          "type": "uint256"
        }
      ],
      "name": "saveProfile",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "purchaseItem1",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "purchaseItem2",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "purchaseItem3",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "purchaseItem4",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "claimBadge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"badgeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum TestContract.State\",\"name\":\"status\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"BadgeClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"ItemPurchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"giftAmount\",\"type\":\"uint256\"}],\"name\":\"ZoodleGifted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"claimBadge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getBadge\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"enum TestContract.State\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"badgeOwner\",\"type\":\"address\"}],\"internalType\":\"struct TestContract.Badge\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUpgrades\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getZoodle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"giftAmount\",\"type\":\"uint256\"}],\"name\":\"giftZoodle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"purchaseItem1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"purchaseItem2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"purchaseItem3\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"purchaseItem4\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"zoodleAccrued\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upgradesAccrued\",\"type\":\"uint256\"}],\"name\":\"saveProfile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Alexander R. D'Alessandro\",\"custom:experimental\":\"This is an experimental contract.\",\"details\":\"All function calls are currently implemented without side effects\",\"kind\":\"dev\",\"methods\":{\"claimBadge(uint256)\":{\"details\":\"require is used to make sure the user looking to claim the badge has enough Zoodle\",\"params\":{\"id\":\"the id of the badge that the user is looking to claim\"}},\"getBadge(uint256)\":{\"details\":\"Can be used upon frontend load to populate badge data\",\"params\":{\"id\":\"the id of the badge that we want to retrieve data for\"},\"returns\":{\"_0\":\"a badge object\"}},\"getUpgrades()\":{\"details\":\"Can be used upon frontend to load mining power\",\"returns\":{\"_0\":\"the mining power of the user\"}},\"getZoodle()\":{\"returns\":{\"_0\":\"the balance of a user\"}},\"giftZoodle(address,uint256)\":{\"details\":\"used onlyOwner to make sure function is only accessed by owner\",\"params\":{\"giftAmount\":\"amount of Zoodle to be gifted\",\"recipient\":\"adress to recieve Zoodle\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"purchaseItem1()\":{\"details\":\"require is used to make sure the user looking to purchase item has enough zoodle accumulated\"},\"purchaseItem2()\":{\"details\":\"require is used to make sure the user looking to purchase item has enough zoodle accumulated\"},\"purchaseItem3()\":{\"details\":\"require is used to make sure the user looking to purchase item has enough zoodle accumulated\"},\"purchaseItem4()\":{\"details\":\"require is used to make sure the user looking to purchase item has enough zoodle accumulated\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"saveProfile(uint256,uint256)\":{\"params\":{\"upgradesAccrued\":\"the amount of mining power the user accrued on the frontend\",\"zoodleAccrued\":\"the amount of zoodle the user mined on frontend\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"A contract for managing user profiles for the blockchain based game Zoodle Clicker\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimBadge(uint256)\":{\"notice\":\"Used to claim a badge\"},\"getBadge(uint256)\":{\"notice\":\"Used to retrieve badge data\"},\"getUpgrades()\":{\"notice\":\"Used to retrieve the mining power of a specific user\"},\"getZoodle()\":{\"notice\":\"Used to retrieve the zoodle balance of a user\"},\"giftZoodle(address,uint256)\":{\"notice\":\"Used by the contract owner to gift an amount of zoodle to a user\"},\"purchaseItem1()\":{\"notice\":\"Used to purchase item1 in the shop\"},\"purchaseItem2()\":{\"notice\":\"Used to purchase item2 in the shop\"},\"purchaseItem3()\":{\"notice\":\"Used to purchase item3 in the shop\"},\"purchaseItem4()\":{\"notice\":\"Used to purchase item4 in the shop\"},\"saveProfile(uint256,uint256)\":{\"notice\":\"Used to save a users progress on the frontend\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/TestContract.sol\":\"TestContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa1b27b3f44ff825974e5268e8f63ad3b03add5b464880d860fbb8cae043e17f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad0fb4425453220f15bdb8c4e009052839804bb725797b6d8c02ee2271bc3c23\",\"dweb:/ipfs/QmPtjdMxzEifPUEUa6cKX1yfTWjaZV6QtdwMdN6bEL9FBM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fd625dca17657403af518cc6c8ab5c54c58898cf6e912ca2e1b0f3194ad0405\",\"dweb:/ipfs/QmQVv7YeeKmaS11bg7YDTeeGDk6i7sV8LMMfohaLM4SiRu\"]},\"project:/contracts/TestContract.sol\":{\"keccak256\":\"0x7f18cf09c03ecdcd66fab94a293c2f5d6a26ae420354bd5c74978e4bb22e7918\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2a8d38b8f46fbd9c66e2c76cc57a75e3a6576524a5de7ef5e21a9a369d93d17\",\"dweb:/ipfs/QmU3mLmTsJNALwZRnTnWPiQtESkEFYzETt1kz4SafhKReK\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638da5cb5b1161008c578063bfad85e511610066578063bfad85e5146101a0578063c8d7cafd146101be578063f055cf76146101c8578063f2fde38b146101e4576100cf565b80638da5cb5b1461015c5780639f43203a1461017a578063b4fe534014610184576100cf565b806323415135146100d45780634e7d1856146100f0578063695bd00c146100fa57806370fc63ae14610118578063715018a6146101225780638d8386221461012c575b600080fd5b6100ee60048036038101906100e991906110de565b610200565b005b6100f86104d1565b005b610102610641565b60405161010f919061111a565b60405180910390f35b610120610688565b005b61012a6107f5565b005b610146600480360381019061014191906110de565b61087d565b6040516101539190611251565b60405180910390f35b61016461095e565b604051610171919061127b565b60405180910390f35b610182610987565b005b61019e600480360381019061019991906112c2565b610afb565b005b6101a8610bf8565b6040516101b5919061111a565b60405180910390f35b6101c6610c8f565b005b6101e260048036038101906101dd9190611302565b610e03565b005b6101fe60048036038101906101f99190611342565b610e8f565b005b8060018081111561021457610213611144565b5b600382815481106102285761022761136f565b5b906000526020600020906003020160020160009054906101000a900460ff16600181111561025957610258611144565b5b1480156102d75750600073ffffffffffffffffffffffffffffffffffffffff166003828154811061028d5761028c61136f565b5b906000526020600020906003020160020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b610316576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030d906113fb565b60405180910390fd5b6003828154811061032a5761032961136f565b5b906000526020600020906003020160010154600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561038757600080fd5b60006003838154811061039d5761039c61136f565b5b906000526020600020906003020160020160006101000a81548160ff021916908360018111156103d0576103cf611144565b5b021790555033600383815481106103ea576103e961136f565b5b906000526020600020906003020160020160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f2619fffd045511b5e0f7ed9cf3627d7fa11dc55759a5e3c60d416888c2f43bff3383600385815481106104705761046f61136f565b5b906000526020600020906003020160020160009054906101000a900460ff16600386815481106104a3576104a261136f565b5b9060005260206000209060030201600101546040516104c5949392919061142a565b60405180910390a15050565b6103e8600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610555576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054c906114bb565b60405180910390fd5b6103e8600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105a6919061150a565b925050819055506032600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105fd919061153e565b925050819055507f9ae886e6a396303cbbd33e367618060d268b3bcedbca31515ee88237cbc5d7eb336103e86040516106379291906115d9565b60405180910390a1565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6064600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561070b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107029061164e565b60405180910390fd5b6064600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461075b919061150a565b925050819055506005600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107b2919061153e565b925050819055507f9ae886e6a396303cbbd33e367618060d268b3bcedbca31515ee88237cbc5d7eb3360646040516107eb9291906116a9565b60405180910390a1565b6107fd610f87565b73ffffffffffffffffffffffffffffffffffffffff1661081b61095e565b73ffffffffffffffffffffffffffffffffffffffff1614610871576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108689061171e565b60405180910390fd5b61087b6000610f8f565b565b610885611053565b600382815481106108995761089861136f565b5b906000526020600020906003020160405180608001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff1660018111156108eb576108ea611144565b5b60018111156108fd576108fc611144565b5b81526020016002820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b620f4240600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610a0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a039061178a565b60405180910390fd5b620f4240600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a5e919061150a565b92505081905550611388600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ab6919061153e565b925050819055507f9ae886e6a396303cbbd33e367618060d268b3bcedbca31515ee88237cbc5d7eb33620f4240604051610af19291906117e5565b60405180910390a1565b610b03610f87565b73ffffffffffffffffffffffffffffffffffffffff16610b2161095e565b73ffffffffffffffffffffffffffffffffffffffff1614610b77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6e9061171e565b60405180910390fd5b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507fd1fbe3b57f68f82076d87d0e76dde1745fae8ac6e7a3ff7e2ae52264d224f7cf8282604051610bec92919061180e565b60405180910390a15050565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610c4a57610c49611837565b5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b620186a0600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610d14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0b906118b2565b60405180910390fd5b620186a0600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d66919061150a565b925050819055506101f4600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610dbe919061153e565b925050819055507f9ae886e6a396303cbbd33e367618060d268b3bcedbca31515ee88237cbc5d7eb33620186a0604051610df992919061190d565b60405180910390a1565b81600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b610e97610f87565b73ffffffffffffffffffffffffffffffffffffffff16610eb561095e565b73ffffffffffffffffffffffffffffffffffffffff1614610f0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f029061171e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f72906119a8565b60405180910390fd5b610f8481610f8f565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60405180608001604052806000815260200160008152602001600060018111156110805761107f611144565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600080fd5b6000819050919050565b6110bb816110a8565b81146110c657600080fd5b50565b6000813590506110d8816110b2565b92915050565b6000602082840312156110f4576110f36110a3565b5b6000611102848285016110c9565b91505092915050565b611114816110a8565b82525050565b600060208201905061112f600083018461110b565b92915050565b61113e816110a8565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061118457611183611144565b5b50565b600081905061119582611173565b919050565b60006111a582611187565b9050919050565b6111b58161119a565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111e6826111bb565b9050919050565b6111f6816111db565b82525050565b6080820160008201516112126000850182611135565b5060208201516112256020850182611135565b50604082015161123860408501826111ac565b50606082015161124b60608501826111ed565b50505050565b600060808201905061126660008301846111fc565b92915050565b611275816111db565b82525050565b6000602082019050611290600083018461126c565b92915050565b61129f816111db565b81146112aa57600080fd5b50565b6000813590506112bc81611296565b92915050565b600080604083850312156112d9576112d86110a3565b5b60006112e7858286016112ad565b92505060206112f8858286016110c9565b9150509250929050565b60008060408385031215611319576113186110a3565b5b6000611327858286016110c9565b9250506020611338858286016110c9565b9150509250929050565b600060208284031215611358576113576110a3565b5b6000611366848285016112ad565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f4261646765206973206f776e6564000000000000000000000000000000000000600082015250565b60006113e5600e8361139e565b91506113f0826113af565b602082019050919050565b60006020820190508181036000830152611414816113d8565b9050919050565b6114248161119a565b82525050565b600060808201905061143f600083018761126c565b61144c602083018661110b565b611459604083018561141b565b611466606083018461110b565b95945050505050565b7f42616c616e6365206973206c657373207468616e203130303000000000000000600082015250565b60006114a560198361139e565b91506114b08261146f565b602082019050919050565b600060208201905081810360008301526114d481611498565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611515826110a8565b9150611520836110a8565b925082821015611533576115326114db565b5b828203905092915050565b6000611549826110a8565b9150611554836110a8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611589576115886114db565b5b828201905092915050565b6000819050919050565b6000819050919050565b60006115c36115be6115b984611594565b61159e565b6110a8565b9050919050565b6115d3816115a8565b82525050565b60006040820190506115ee600083018561126c565b6115fb60208301846115ca565b9392505050565b7f42616c616e6365206973206c657373207468616e203130300000000000000000600082015250565b600061163860188361139e565b915061164382611602565b602082019050919050565b600060208201905081810360008301526116678161162b565b9050919050565b6000819050919050565b600061169361168e6116898461166e565b61159e565b6110a8565b9050919050565b6116a381611678565b82525050565b60006040820190506116be600083018561126c565b6116cb602083018461169a565b9392505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061170860208361139e565b9150611713826116d2565b602082019050919050565b60006020820190508181036000830152611737816116fb565b9050919050565b7f42616c616e6365206973206c657373207468616e203130303030303000000000600082015250565b6000611774601c8361139e565b915061177f8261173e565b602082019050919050565b600060208201905081810360008301526117a381611767565b9050919050565b6000819050919050565b60006117cf6117ca6117c5846117aa565b61159e565b6110a8565b9050919050565b6117df816117b4565b82525050565b60006040820190506117fa600083018561126c565b61180760208301846117d6565b9392505050565b6000604082019050611823600083018561126c565b611830602083018461110b565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f42616c616e6365206973206c657373207468616e203130303030300000000000600082015250565b600061189c601b8361139e565b91506118a782611866565b602082019050919050565b600060208201905081810360008301526118cb8161188f565b9050919050565b6000819050919050565b60006118f76118f26118ed846118d2565b61159e565b6110a8565b9050919050565b611907816118dc565b82525050565b6000604082019050611922600083018561126c565b61192f60208301846118fe565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061199260268361139e565b915061199d82611936565b604082019050919050565b600060208201905081810360008301526119c181611985565b905091905056fea264697066735822122012a0c3dd9d0fd1d2b017fc73dd286399dbf82b1833ce775fc58f1c998c72611c64736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:190:3",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "35:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "52:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "55:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "45:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "45:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "45:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "149:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "152:4:3",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "142:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "142:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "142:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "173:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "176:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "166:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "166:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "166:15:3"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "7:180:3"
          }
        ]
      },
      "contents": "{\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n",
      "id": 3,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:18146:3",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:3",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:3"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:3",
                "type": ""
              }
            ],
            "src": "7:75:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:3",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:3"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:3",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:3"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:32:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:16:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "400:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:3",
                "type": ""
              }
            ],
            "src": "334:77:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "460:79:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "517:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "526:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "529:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "519:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "519:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "519:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "483:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "508:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "490:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "490:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "480:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:35:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "473:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "473:43:3"
                  },
                  "nodeType": "YulIf",
                  "src": "470:63:3"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "453:5:3",
                "type": ""
              }
            ],
            "src": "417:122:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "597:87:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "607:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "629:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "616:12:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "607:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "672:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "645:26:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "645:33:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "645:33:3"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "575:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "583:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "591:5:3",
                "type": ""
              }
            ],
            "src": "545:139:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "756:263:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "802:83:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "804:77:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "804:79:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "804:79:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "777:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "786:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "773:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "773:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "798:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "769:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "769:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "766:119:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "895:117:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "910:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "924:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "914:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "939:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "974:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "985:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "970:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "970:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "994:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "949:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "949:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "939:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "726:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "737:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "749:6:3",
                "type": ""
              }
            ],
            "src": "690:329:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1090:53:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1107:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1130:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1112:17:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1112:24:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1100:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1100:37:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1100:37:3"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1078:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1085:3:3",
                "type": ""
              }
            ],
            "src": "1025:118:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1247:124:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1257:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1269:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1280:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1265:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1265:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1257:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1337:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1350:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1361:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1346:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1346:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1293:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1293:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1293:71:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1219:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1231:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1242:4:3",
                "type": ""
              }
            ],
            "src": "1149:222:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1432:53:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1449:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1472:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1454:17:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1454:24:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1442:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1442:37:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1442:37:3"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1420:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1427:3:3",
                "type": ""
              }
            ],
            "src": "1377:108:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1519:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1536:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1539:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1529:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1529:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1529:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1633:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1636:4:3",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1626:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1626:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1626:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1657:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1660:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1650:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1650:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1650:15:3"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "1491:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1729:62:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1763:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "1765:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1765:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1765:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1752:5:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1759:1:3",
                            "type": "",
                            "value": "2"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1749:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1749:12:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1742:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1742:20:3"
                  },
                  "nodeType": "YulIf",
                  "src": "1739:46:3"
                }
              ]
            },
            "name": "validator_assert_t_enum$_State_$143",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1722:5:3",
                "type": ""
              }
            ],
            "src": "1677:114:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1851:75:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1861:16:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1872:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1861:7:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1914:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_State_$143",
                      "nodeType": "YulIdentifier",
                      "src": "1878:35:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1878:42:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1878:42:3"
                }
              ]
            },
            "name": "cleanup_t_enum$_State_$143",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1833:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1843:7:3",
                "type": ""
              }
            ],
            "src": "1797:129:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1999:62:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2009:46:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2049:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_State_$143",
                      "nodeType": "YulIdentifier",
                      "src": "2022:26:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2022:33:3"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "2009:9:3"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_State_$143_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1979:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1989:9:3",
                "type": ""
              }
            ],
            "src": "1932:129:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2129:73:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2146:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2189:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_State_$143_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "2151:37:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2151:44:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2139:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2139:57:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2139:57:3"
                }
              ]
            },
            "name": "abi_encode_t_enum$_State_$143_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2117:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2124:3:3",
                "type": ""
              }
            ],
            "src": "2067:135:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2253:81:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2263:65:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2278:5:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2285:42:3",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2274:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2274:54:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2263:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2235:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2245:7:3",
                "type": ""
              }
            ],
            "src": "2208:126:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2385:51:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2395:35:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2424:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2406:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2406:24:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2395:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2367:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2377:7:3",
                "type": ""
              }
            ],
            "src": "2340:96:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2497:53:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2514:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2537:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2519:17:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2519:24:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2507:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2507:37:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2507:37:3"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2485:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2492:3:3",
                "type": ""
              }
            ],
            "src": "2442:108:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2728:753:3",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2738:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2754:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2759:4:3",
                        "type": "",
                        "value": "0x80"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2750:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2750:14:3"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "2742:4:3",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2774:162:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2807:43:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2837:5:3"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2844:4:3",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2833:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2833:16:3"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2827:5:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2827:23:3"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "2811:12:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "2897:12:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "2915:3:3"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2920:4:3",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2911:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2911:14:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2863:33:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2863:63:3"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2863:63:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2946:165:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2982:43:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3012:5:3"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3019:4:3",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3008:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3008:16:3"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3002:5:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3002:23:3"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "2986:12:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "3072:12:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3090:3:3"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3095:4:3",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3086:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3086:14:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3038:33:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3038:63:3"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3038:63:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3121:173:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3158:43:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3188:5:3"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3195:4:3",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3184:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3184:16:3"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3178:5:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3178:23:3"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "3162:12:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "3255:12:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3273:3:3"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3278:4:3",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3269:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3269:14:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_enum$_State_$143_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "3214:40:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3214:70:3"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3214:70:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3304:170:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3345:43:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3375:5:3"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3382:4:3",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3371:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3371:16:3"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3365:5:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3365:23:3"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "3349:12:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "3435:12:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3453:3:3"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3458:4:3",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3449:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3449:14:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3401:33:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3401:63:3"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3401:63:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_struct$_Badge_$153_memory_ptr_to_t_struct$_Badge_$153_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2715:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2722:3:3",
                "type": ""
              }
            ],
            "src": "2618:863:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3629:169:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3639:27:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3651:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3662:3:3",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3647:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3647:19:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3639:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3764:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3777:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3788:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3773:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3773:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_Badge_$153_memory_ptr_to_t_struct$_Badge_$153_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3676:87:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3676:115:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3676:115:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_Badge_$153_memory_ptr__to_t_struct$_Badge_$153_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3601:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3613:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3624:4:3",
                "type": ""
              }
            ],
            "src": "3487:311:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3869:53:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3886:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3909:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3891:17:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3891:24:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3879:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3879:37:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3879:37:3"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3857:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3864:3:3",
                "type": ""
              }
            ],
            "src": "3804:118:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4026:124:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4036:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4048:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4059:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4044:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4044:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4036:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4116:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4129:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4140:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4125:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4125:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4072:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4072:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4072:71:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3998:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4010:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4021:4:3",
                "type": ""
              }
            ],
            "src": "3928:222:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4199:79:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4256:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4265:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4268:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4258:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4258:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4258:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4222:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4247:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "4229:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4229:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4219:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4219:35:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4212:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4212:43:3"
                  },
                  "nodeType": "YulIf",
                  "src": "4209:63:3"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4192:5:3",
                "type": ""
              }
            ],
            "src": "4156:122:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4336:87:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4346:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4368:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4355:12:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4355:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "4346:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4411:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "4384:26:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4384:33:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4384:33:3"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "4314:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4322:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4330:5:3",
                "type": ""
              }
            ],
            "src": "4284:139:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4512:391:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4558:83:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "4560:77:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4560:79:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4560:79:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4533:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4542:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4529:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4529:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4554:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4525:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4525:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "4522:119:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4651:117:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4666:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4680:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4670:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4695:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4730:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4741:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4726:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4726:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4750:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4705:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4705:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4695:6:3"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4778:118:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4793:16:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4807:2:3",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4797:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4823:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4858:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4869:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4854:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4854:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4878:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4833:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4833:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "4823:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4474:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4485:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4497:6:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4505:6:3",
                "type": ""
              }
            ],
            "src": "4429:474:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4992:391:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5038:83:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "5040:77:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5040:79:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5040:79:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5013:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5022:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5009:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5009:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5034:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5005:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5005:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "5002:119:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5131:117:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5146:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5160:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5150:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5175:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5210:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5221:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5206:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5206:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5230:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5185:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5185:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5175:6:3"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5258:118:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5273:16:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5287:2:3",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5277:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5303:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5338:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5349:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5334:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5334:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5358:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5313:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5313:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "5303:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4954:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4965:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4977:6:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4985:6:3",
                "type": ""
              }
            ],
            "src": "4909:474:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5455:263:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5501:83:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "5503:77:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5503:79:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5503:79:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5476:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5485:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5472:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5472:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5497:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5468:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5468:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "5465:119:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5594:117:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5609:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5623:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5613:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5638:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5673:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5684:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5669:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5669:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5693:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5648:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5648:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5638:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5425:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5436:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5448:6:3",
                "type": ""
              }
            ],
            "src": "5389:329:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5752:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5769:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5772:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5762:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5762:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5762:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5866:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5869:4:3",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5859:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5859:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5859:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5890:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5893:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5883:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5883:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5883:15:3"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "5724:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6006:73:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6023:3:3"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6028:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6016:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6016:19:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6016:19:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6044:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6063:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6068:4:3",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6059:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6059:14:3"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "6044:11:3"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5978:3:3",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5983:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "5994:11:3",
                "type": ""
              }
            ],
            "src": "5910:169:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6191:58:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6213:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6221:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6209:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6209:14:3"
                      },
                      {
                        "hexValue": "4261646765206973206f776e6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6225:16:3",
                        "type": "",
                        "value": "Badge is owned"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6202:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6202:40:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6202:40:3"
                }
              ]
            },
            "name": "store_literal_in_memory_ca92dfa1569f43c2e3a55b5cc2c6800798cb1dfebd0b0f3d0a0b69772d23e8d6",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6183:6:3",
                "type": ""
              }
            ],
            "src": "6085:164:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6401:220:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6411:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6477:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6482:2:3",
                        "type": "",
                        "value": "14"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6418:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6418:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6411:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6583:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_ca92dfa1569f43c2e3a55b5cc2c6800798cb1dfebd0b0f3d0a0b69772d23e8d6",
                      "nodeType": "YulIdentifier",
                      "src": "6494:88:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6494:93:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6494:93:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6596:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6607:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6612:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6603:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6603:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6596:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_ca92dfa1569f43c2e3a55b5cc2c6800798cb1dfebd0b0f3d0a0b69772d23e8d6_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6389:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6397:3:3",
                "type": ""
              }
            ],
            "src": "6255:366:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6798:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6808:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6820:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6831:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6816:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6816:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6808:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6855:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6866:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6851:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6851:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6874:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6880:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6870:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6870:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6844:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6844:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6844:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6900:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7034:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ca92dfa1569f43c2e3a55b5cc2c6800798cb1dfebd0b0f3d0a0b69772d23e8d6_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6908:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6908:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6900:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ca92dfa1569f43c2e3a55b5cc2c6800798cb1dfebd0b0f3d0a0b69772d23e8d6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6778:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6793:4:3",
                "type": ""
              }
            ],
            "src": "6627:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7124:73:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7141:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7184:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_State_$143_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "7146:37:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7146:44:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7134:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7134:57:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7134:57:3"
                }
              ]
            },
            "name": "abi_encode_t_enum$_State_$143_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7112:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7119:3:3",
                "type": ""
              }
            ],
            "src": "7052:145:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7392:378:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7402:27:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7414:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7425:3:3",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7410:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7410:19:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7402:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7483:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7496:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7507:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7492:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7492:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7439:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7439:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7439:71:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7564:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7577:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7588:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7573:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7573:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7520:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7520:72:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7520:72:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7653:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7666:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7677:2:3",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7662:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7662:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_State_$143_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7602:50:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7602:79:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7602:79:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "7735:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7748:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7759:2:3",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7744:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7744:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7691:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7691:72:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7691:72:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_enum$_State_$143_t_uint256__to_t_address_t_uint256_t_uint8_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7340:9:3",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "7352:6:3",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7360:6:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7368:6:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7376:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7387:4:3",
                "type": ""
              }
            ],
            "src": "7203:567:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7882:69:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7904:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7912:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7900:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7900:14:3"
                      },
                      {
                        "hexValue": "42616c616e6365206973206c657373207468616e2031303030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7916:27:3",
                        "type": "",
                        "value": "Balance is less than 1000"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7893:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7893:51:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7893:51:3"
                }
              ]
            },
            "name": "store_literal_in_memory_74e75d695ac64f334ab3691dd3394382a45b98fcd943c0a73e5cef47fe00a7af",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7874:6:3",
                "type": ""
              }
            ],
            "src": "7776:175:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8103:220:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8113:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8179:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8184:2:3",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8120:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8120:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8113:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8285:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_74e75d695ac64f334ab3691dd3394382a45b98fcd943c0a73e5cef47fe00a7af",
                      "nodeType": "YulIdentifier",
                      "src": "8196:88:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8196:93:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8196:93:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8298:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8309:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8314:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8305:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8305:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8298:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_74e75d695ac64f334ab3691dd3394382a45b98fcd943c0a73e5cef47fe00a7af_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8091:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8099:3:3",
                "type": ""
              }
            ],
            "src": "7957:366:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8500:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8510:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8522:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8533:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8518:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8518:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8510:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8557:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8568:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8553:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8553:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8576:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8582:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8572:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8572:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8546:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8546:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8546:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8602:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8736:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_74e75d695ac64f334ab3691dd3394382a45b98fcd943c0a73e5cef47fe00a7af_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8610:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8610:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8602:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_74e75d695ac64f334ab3691dd3394382a45b98fcd943c0a73e5cef47fe00a7af__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8480:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8495:4:3",
                "type": ""
              }
            ],
            "src": "8329:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8782:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8799:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8802:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8792:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8792:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8792:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8896:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8899:4:3",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8889:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8889:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8889:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8920:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8923:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8913:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8913:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8913:15:3"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "8754:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8985:146:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8995:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9018:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9000:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9000:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "8995:1:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9029:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9052:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9034:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9034:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "9029:1:3"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9076:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "9078:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9078:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9078:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9070:1:3"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9073:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "9067:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9067:8:3"
                  },
                  "nodeType": "YulIf",
                  "src": "9064:34:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9108:17:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9120:1:3"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9123:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "9116:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9116:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "9108:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8971:1:3",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8974:1:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "8980:4:3",
                "type": ""
              }
            ],
            "src": "8940:191:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9181:261:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9191:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9214:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9196:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9196:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "9191:1:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9225:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9248:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9230:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9230:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "9225:1:3"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9388:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "9390:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9390:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9390:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9309:1:3"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9316:66:3",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "9384:1:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9312:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9312:74:3"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9306:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9306:81:3"
                  },
                  "nodeType": "YulIf",
                  "src": "9303:107:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9420:16:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9431:1:3"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9434:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9427:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9427:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "9420:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "9168:1:3",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "9171:1:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "9177:3:3",
                "type": ""
              }
            ],
            "src": "9137:305:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9504:32:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9514:16:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "9525:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "9514:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_rational_1000_by_1",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9486:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "9496:7:3",
                "type": ""
              }
            ],
            "src": "9448:88:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9574:28:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9584:12:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "9591:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "9584:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9560:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "9570:3:3",
                "type": ""
              }
            ],
            "src": "9542:60:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9679:93:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9689:77:3",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9758:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_rational_1000_by_1",
                              "nodeType": "YulIdentifier",
                              "src": "9729:28:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9729:35:3"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "9720:8:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9720:45:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9702:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9702:64:3"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "9689:9:3"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_rational_1000_by_1_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9659:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "9669:9:3",
                "type": ""
              }
            ],
            "src": "9608:164:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9854:77:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9871:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9918:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_rational_1000_by_1_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "9876:41:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9876:48:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9864:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9864:61:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9864:61:3"
                }
              ]
            },
            "name": "abi_encode_t_rational_1000_by_1_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9842:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9849:3:3",
                "type": ""
              }
            ],
            "src": "9778:153:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10074:217:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10084:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10096:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10107:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10092:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10092:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10084:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10164:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10177:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10188:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10173:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10173:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10120:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10120:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10120:71:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "10256:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10269:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10280:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10265:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10265:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_rational_1000_by_1_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10201:54:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10201:83:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10201:83:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_rational_1000_by_1__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10038:9:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10050:6:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10058:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10069:4:3",
                "type": ""
              }
            ],
            "src": "9937:354:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10403:68:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10425:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10433:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10421:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10421:14:3"
                      },
                      {
                        "hexValue": "42616c616e6365206973206c657373207468616e20313030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10437:26:3",
                        "type": "",
                        "value": "Balance is less than 100"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10414:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10414:50:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10414:50:3"
                }
              ]
            },
            "name": "store_literal_in_memory_dd6426bca85c04495b9ec0e29ac3d57760204185c8dfb7452c2f86678998639b",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "10395:6:3",
                "type": ""
              }
            ],
            "src": "10297:174:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10623:220:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10633:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10699:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10704:2:3",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10640:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10640:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "10633:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10805:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_dd6426bca85c04495b9ec0e29ac3d57760204185c8dfb7452c2f86678998639b",
                      "nodeType": "YulIdentifier",
                      "src": "10716:88:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10716:93:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10716:93:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10818:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10829:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10834:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10825:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10825:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "10818:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_dd6426bca85c04495b9ec0e29ac3d57760204185c8dfb7452c2f86678998639b_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10611:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10619:3:3",
                "type": ""
              }
            ],
            "src": "10477:366:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11020:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11030:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11042:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11053:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11038:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11038:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11030:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11077:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11088:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11073:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11073:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11096:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11102:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11092:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11092:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11066:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11066:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11066:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11122:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11256:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_dd6426bca85c04495b9ec0e29ac3d57760204185c8dfb7452c2f86678998639b_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11130:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11130:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11122:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_dd6426bca85c04495b9ec0e29ac3d57760204185c8dfb7452c2f86678998639b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11000:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11015:4:3",
                "type": ""
              }
            ],
            "src": "10849:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11329:32:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11339:16:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "11350:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "11339:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_rational_100_by_1",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11311:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "11321:7:3",
                "type": ""
              }
            ],
            "src": "11274:87:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11437:92:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11447:76:3",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11515:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_rational_100_by_1",
                              "nodeType": "YulIdentifier",
                              "src": "11487:27:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11487:34:3"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "11478:8:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11478:44:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11460:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11460:63:3"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "11447:9:3"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_rational_100_by_1_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11417:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "11427:9:3",
                "type": ""
              }
            ],
            "src": "11367:162:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11610:76:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11627:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11673:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_rational_100_by_1_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "11632:40:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11632:47:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11620:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11620:60:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11620:60:3"
                }
              ]
            },
            "name": "abi_encode_t_rational_100_by_1_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11598:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11605:3:3",
                "type": ""
              }
            ],
            "src": "11535:151:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11828:216:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11838:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11850:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11861:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11846:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11846:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11838:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11918:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11931:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11942:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11927:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11927:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11874:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11874:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11874:71:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "12009:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12022:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12033:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12018:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12018:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_rational_100_by_1_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11955:53:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11955:82:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11955:82:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_rational_100_by_1__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11792:9:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11804:6:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11812:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11823:4:3",
                "type": ""
              }
            ],
            "src": "11692:352:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12156:76:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12178:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12186:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12174:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12174:14:3"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12190:34:3",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12167:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12167:58:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12167:58:3"
                }
              ]
            },
            "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "12148:6:3",
                "type": ""
              }
            ],
            "src": "12050:182:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12384:220:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12394:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12460:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12465:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12401:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12401:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "12394:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12566:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                      "nodeType": "YulIdentifier",
                      "src": "12477:88:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12477:93:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12477:93:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12579:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12590:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12595:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12586:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12586:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "12579:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12372:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12380:3:3",
                "type": ""
              }
            ],
            "src": "12238:366:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12781:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12791:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12803:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12814:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12799:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12799:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12791:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12838:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12849:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12834:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12834:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12857:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12863:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12853:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12853:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12827:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12827:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12827:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12883:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13017:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12891:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12891:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12883:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12761:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12776:4:3",
                "type": ""
              }
            ],
            "src": "12610:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13141:72:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13163:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13171:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13159:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13159:14:3"
                      },
                      {
                        "hexValue": "42616c616e6365206973206c657373207468616e2031303030303030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13175:30:3",
                        "type": "",
                        "value": "Balance is less than 1000000"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13152:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13152:54:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13152:54:3"
                }
              ]
            },
            "name": "store_literal_in_memory_cd739708401f46218dc1095f4a474a347b3b088ed77f1e1b81dd28cd51ec3151",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "13133:6:3",
                "type": ""
              }
            ],
            "src": "13035:178:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13365:220:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13375:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13441:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13446:2:3",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13382:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13382:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "13375:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13547:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_cd739708401f46218dc1095f4a474a347b3b088ed77f1e1b81dd28cd51ec3151",
                      "nodeType": "YulIdentifier",
                      "src": "13458:88:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13458:93:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13458:93:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13560:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13571:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13576:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13567:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13567:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "13560:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_cd739708401f46218dc1095f4a474a347b3b088ed77f1e1b81dd28cd51ec3151_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13353:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "13361:3:3",
                "type": ""
              }
            ],
            "src": "13219:366:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13762:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13772:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13784:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13795:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13780:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13780:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13772:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13819:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13830:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13815:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13815:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13838:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13844:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13834:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13834:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13808:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13808:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13808:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13864:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13998:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_cd739708401f46218dc1095f4a474a347b3b088ed77f1e1b81dd28cd51ec3151_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13872:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13872:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13864:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cd739708401f46218dc1095f4a474a347b3b088ed77f1e1b81dd28cd51ec3151__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13742:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13757:4:3",
                "type": ""
              }
            ],
            "src": "13591:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14075:32:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14085:16:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "14096:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "14085:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_rational_1000000_by_1",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14057:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "14067:7:3",
                "type": ""
              }
            ],
            "src": "14016:91:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14187:96:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14197:80:3",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "14269:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_rational_1000000_by_1",
                              "nodeType": "YulIdentifier",
                              "src": "14237:31:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14237:38:3"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "14228:8:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14228:48:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "14210:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14210:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "14197:9:3"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_rational_1000000_by_1_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14167:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "14177:9:3",
                "type": ""
              }
            ],
            "src": "14113:170:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14368:80:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14385:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14435:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_rational_1000000_by_1_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "14390:44:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14390:51:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14378:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14378:64:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14378:64:3"
                }
              ]
            },
            "name": "abi_encode_t_rational_1000000_by_1_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14356:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14363:3:3",
                "type": ""
              }
            ],
            "src": "14289:159:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14594:220:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14604:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14616:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14627:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14612:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14612:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14604:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14684:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14697:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14708:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14693:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14693:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14640:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14640:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14640:71:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "14779:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14792:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14803:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14788:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14788:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_rational_1000000_by_1_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14721:57:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14721:86:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14721:86:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_rational_1000000_by_1__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14558:9:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "14570:6:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14578:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14589:4:3",
                "type": ""
              }
            ],
            "src": "14454:360:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14946:206:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14956:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14968:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14979:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14964:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14964:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14956:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "15036:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15049:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15060:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15045:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15045:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14992:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14992:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14992:71:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "15117:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15130:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15141:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15126:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15126:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15073:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15073:72:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15073:72:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14910:9:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "14922:6:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14930:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14941:4:3",
                "type": ""
              }
            ],
            "src": "14820:332:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15186:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15203:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15206:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15196:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15196:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15196:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15300:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15303:4:3",
                        "type": "",
                        "value": "0x01"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15293:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15293:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15293:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15324:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15327:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "15317:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15317:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15317:15:3"
                }
              ]
            },
            "name": "panic_error_0x01",
            "nodeType": "YulFunctionDefinition",
            "src": "15158:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15450:71:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "15472:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15480:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15468:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15468:14:3"
                      },
                      {
                        "hexValue": "42616c616e6365206973206c657373207468616e20313030303030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15484:29:3",
                        "type": "",
                        "value": "Balance is less than 100000"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15461:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15461:53:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15461:53:3"
                }
              ]
            },
            "name": "store_literal_in_memory_b45568aa80c97b0bb500ac65ea65976d37e72e49aceb554ad05e27c373b05d77",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "15442:6:3",
                "type": ""
              }
            ],
            "src": "15344:177:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15673:220:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15683:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15749:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15754:2:3",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15690:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15690:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "15683:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15855:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_b45568aa80c97b0bb500ac65ea65976d37e72e49aceb554ad05e27c373b05d77",
                      "nodeType": "YulIdentifier",
                      "src": "15766:88:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15766:93:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15766:93:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15868:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15879:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15884:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15875:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15875:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "15868:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_b45568aa80c97b0bb500ac65ea65976d37e72e49aceb554ad05e27c373b05d77_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "15661:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "15669:3:3",
                "type": ""
              }
            ],
            "src": "15527:366:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16070:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16080:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16092:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16103:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16088:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16088:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16080:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16127:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16138:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16123:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16123:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "16146:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16152:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "16142:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16142:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16116:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16116:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16116:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16172:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "16306:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_b45568aa80c97b0bb500ac65ea65976d37e72e49aceb554ad05e27c373b05d77_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16180:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16180:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16172:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b45568aa80c97b0bb500ac65ea65976d37e72e49aceb554ad05e27c373b05d77__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16050:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16065:4:3",
                "type": ""
              }
            ],
            "src": "15899:419:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16382:32:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16392:16:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "16403:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "16392:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_rational_100000_by_1",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16364:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "16374:7:3",
                "type": ""
              }
            ],
            "src": "16324:90:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16493:95:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16503:79:3",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "16574:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_rational_100000_by_1",
                              "nodeType": "YulIdentifier",
                              "src": "16543:30:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16543:37:3"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "16534:8:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16534:47:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "16516:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16516:66:3"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "16503:9:3"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_rational_100000_by_1_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16473:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "16483:9:3",
                "type": ""
              }
            ],
            "src": "16420:168:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16672:79:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16689:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "16738:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_rational_100000_by_1_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "16694:43:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16694:50:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16682:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16682:63:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16682:63:3"
                }
              ]
            },
            "name": "abi_encode_t_rational_100000_by_1_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16660:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "16667:3:3",
                "type": ""
              }
            ],
            "src": "16594:157:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16896:219:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16906:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16918:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16929:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16914:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16914:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16906:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "16986:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16999:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17010:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16995:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16995:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16942:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16942:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16942:71:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "17080:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17093:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17104:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17089:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17089:18:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_rational_100000_by_1_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17023:56:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17023:85:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17023:85:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_rational_100000_by_1__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16860:9:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "16872:6:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16880:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16891:4:3",
                "type": ""
              }
            ],
            "src": "16757:358:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17227:119:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "17249:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17257:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17245:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17245:14:3"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17261:34:3",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17238:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17238:58:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17238:58:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "17317:6:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17325:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17313:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17313:15:3"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17330:8:3",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17306:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17306:33:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17306:33:3"
                }
              ]
            },
            "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "17219:6:3",
                "type": ""
              }
            ],
            "src": "17121:225:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17498:220:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17508:74:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17574:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17579:2:3",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17515:58:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17515:67:3"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "17508:3:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17680:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                      "nodeType": "YulIdentifier",
                      "src": "17591:88:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17591:93:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17591:93:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17693:19:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17704:3:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17709:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17700:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17700:12:3"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "17693:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "17486:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "17494:3:3",
                "type": ""
              }
            ],
            "src": "17352:366:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17895:248:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17905:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17917:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17928:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17913:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17913:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17905:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17952:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17963:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17948:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17948:17:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "17971:4:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17977:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "17967:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17967:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17941:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17941:47:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17941:47:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17997:139:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "18131:4:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18005:124:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18005:131:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17997:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17875:9:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17890:4:3",
                "type": ""
              }
            ],
            "src": "17724:419:3"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_State_$143(value) {\n        if iszero(lt(value, 2)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_State_$143(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_State_$143(value)\n    }\n\n    function convert_t_enum$_State_$143_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_State_$143(value)\n    }\n\n    function abi_encode_t_enum$_State_$143_to_t_uint8(value, pos) {\n        mstore(pos, convert_t_enum$_State_$143_to_t_uint8(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // struct TestContract.Badge -> struct TestContract.Badge\n    function abi_encode_t_struct$_Badge_$153_memory_ptr_to_t_struct$_Badge_$153_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x80)\n\n        {\n            // id\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // price\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // status\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_enum$_State_$143_to_t_uint8(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // badgeOwner\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_Badge_$153_memory_ptr__to_t_struct$_Badge_$153_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_struct$_Badge_$153_memory_ptr_to_t_struct$_Badge_$153_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ca92dfa1569f43c2e3a55b5cc2c6800798cb1dfebd0b0f3d0a0b69772d23e8d6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Badge is owned\")\n\n    }\n\n    function abi_encode_t_stringliteral_ca92dfa1569f43c2e3a55b5cc2c6800798cb1dfebd0b0f3d0a0b69772d23e8d6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_ca92dfa1569f43c2e3a55b5cc2c6800798cb1dfebd0b0f3d0a0b69772d23e8d6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ca92dfa1569f43c2e3a55b5cc2c6800798cb1dfebd0b0f3d0a0b69772d23e8d6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ca92dfa1569f43c2e3a55b5cc2c6800798cb1dfebd0b0f3d0a0b69772d23e8d6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_enum$_State_$143_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_State_$143_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_enum$_State_$143_t_uint256__to_t_address_t_uint256_t_uint8_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_enum$_State_$143_to_t_uint8_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_74e75d695ac64f334ab3691dd3394382a45b98fcd943c0a73e5cef47fe00a7af(memPtr) {\n\n        mstore(add(memPtr, 0), \"Balance is less than 1000\")\n\n    }\n\n    function abi_encode_t_stringliteral_74e75d695ac64f334ab3691dd3394382a45b98fcd943c0a73e5cef47fe00a7af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_74e75d695ac64f334ab3691dd3394382a45b98fcd943c0a73e5cef47fe00a7af(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_74e75d695ac64f334ab3691dd3394382a45b98fcd943c0a73e5cef47fe00a7af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_74e75d695ac64f334ab3691dd3394382a45b98fcd943c0a73e5cef47fe00a7af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_rational_1000_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1000_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_1000_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1000_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1000_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_rational_1000_by_1__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_1000_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_dd6426bca85c04495b9ec0e29ac3d57760204185c8dfb7452c2f86678998639b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Balance is less than 100\")\n\n    }\n\n    function abi_encode_t_stringliteral_dd6426bca85c04495b9ec0e29ac3d57760204185c8dfb7452c2f86678998639b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_dd6426bca85c04495b9ec0e29ac3d57760204185c8dfb7452c2f86678998639b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_dd6426bca85c04495b9ec0e29ac3d57760204185c8dfb7452c2f86678998639b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dd6426bca85c04495b9ec0e29ac3d57760204185c8dfb7452c2f86678998639b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_100_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_100_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_100_by_1(value)))\n    }\n\n    function abi_encode_t_rational_100_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_100_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_rational_100_by_1__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_100_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cd739708401f46218dc1095f4a474a347b3b088ed77f1e1b81dd28cd51ec3151(memPtr) {\n\n        mstore(add(memPtr, 0), \"Balance is less than 1000000\")\n\n    }\n\n    function abi_encode_t_stringliteral_cd739708401f46218dc1095f4a474a347b3b088ed77f1e1b81dd28cd51ec3151_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_cd739708401f46218dc1095f4a474a347b3b088ed77f1e1b81dd28cd51ec3151(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cd739708401f46218dc1095f4a474a347b3b088ed77f1e1b81dd28cd51ec3151__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cd739708401f46218dc1095f4a474a347b3b088ed77f1e1b81dd28cd51ec3151_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1000000_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_1000000_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_1000000_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1000000_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1000000_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_rational_1000000_by_1__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_1000000_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x01() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_b45568aa80c97b0bb500ac65ea65976d37e72e49aceb554ad05e27c373b05d77(memPtr) {\n\n        mstore(add(memPtr, 0), \"Balance is less than 100000\")\n\n    }\n\n    function abi_encode_t_stringliteral_b45568aa80c97b0bb500ac65ea65976d37e72e49aceb554ad05e27c373b05d77_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_b45568aa80c97b0bb500ac65ea65976d37e72e49aceb554ad05e27c373b05d77(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b45568aa80c97b0bb500ac65ea65976d37e72e49aceb554ad05e27c373b05d77__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b45568aa80c97b0bb500ac65ea65976d37e72e49aceb554ad05e27c373b05d77_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_100000_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_100000_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_100000_by_1(value)))\n    }\n\n    function abi_encode_t_rational_100000_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_100000_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_rational_100000_by_1__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_100000_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 3,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "386:4743:2:-:0;;;726:367;;;;;;;;;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;745:6:2;757:95;;;;;;;;773:1;757:95;;;;787:3;757:95;;;;805:13;757:95;;;;;;;;:::i;:::-;;;;;;844:1;757:95;;;;;745:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;859:6;871:98;;;;;;;;887:1;871:98;;;;901:6;871:98;;;;922:13;871:98;;;;;;;;:::i;:::-;;;;;;961:1;871:98;;;;;859:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;976:6;988:99;;;;;;;;1004:1;988:99;;;;1018:7;988:99;;;;1040:13;988:99;;;;;;;;:::i;:::-;;;;;;1079:1;988:99;;;;;976:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;386:4743;;640:96:1;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;7:180:3:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;386:4743:2;;;;;;;",
  "deployedSourceMap": "386:4743:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4856:270;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3623:231;;;:::i;:::-;;2585:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3241:225;;;:::i;:::-;;1668:101:0;;;:::i;:::-;;2322:91:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1036:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4408:244:2;;;:::i;:::-;;1702:170;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1974:137;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4011:240;;;:::i;:::-;;2906:176;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1918:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4856:270:2;4905:2;1360:13;1339:34;;;;;;;;:::i;:::-;;:6;1346:2;1339:10;;;;;;;;:::i;:::-;;;;;;;;;;;;:17;;;;;;;;;;;;:34;;;;;;;;:::i;:::-;;;:73;;;;;1410:1;1377:35;;:6;1384:2;1377:10;;;;;;;;:::i;:::-;;;;;;;;;;;;:21;;;;;;;;;;;;:35;;;1339:73;1331:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;4952:6:::1;4959:2;4952:10;;;;;;;;:::i;:::-;;;;;;;;;;;;:16;;;4922:14;:26;4937:10;4922:26;;;;;;;;;;;;;;;;:46;;4914:55;;;::::0;::::1;;4995:11;4975:6;4982:2;4975:10;;;;;;;;:::i;:::-;;;;;;;;;;;;:17;;;:31;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;5036:10;5012:6;5019:2;5012:10;;;;;;;;:::i;:::-;;;;;;;;;;;;:21;;;:34;;;;;;;;;;;;;;;;;;5057:64;5070:10;5082:2;5086:6;5093:2;5086:10;;;;;;;;:::i;:::-;;;;;;;;;;;;:17;;;;;;;;;;;;5104:6;5111:2;5104:10;;;;;;;;:::i;:::-;;;;;;;;;;;;:16;;;5057:64;;;;;;;;;:::i;:::-;;;;;;;;4856:270:::0;;:::o;3623:231::-;3698:4;3668:14;:26;3683:10;3668:26;;;;;;;;;;;;;;;;:34;;3660:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;3768:4;3738:14;:26;3753:10;3738:26;;;;;;;;;;;;;;;;:34;;;;;;;:::i;:::-;;;;;;;;3805:2;3778:12;:24;3791:10;3778:24;;;;;;;;;;;;;;;;:29;;;;;;;:::i;:::-;;;;;;;;3819:30;3832:10;3844:4;3819:30;;;;;;;:::i;:::-;;;;;;;;3623:231::o;2585:93::-;2628:7;2649:12;:24;2662:10;2649:24;;;;;;;;;;;;;;;;2642:31;;2585:93;:::o;3241:225::-;3316:3;3286:14;:26;3301:10;3286:26;;;;;;;;;;;;;;;;:33;;3278:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;3384:3;3354:14;:26;3369:10;3354:26;;;;;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;;;;;3420:1;3393:12;:24;3406:10;3393:24;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;3432:29;3445:10;3457:3;3432:29;;;;;;;:::i;:::-;;;;;;;;3241:225::o;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;2322:91:2:-;2372:12;;:::i;:::-;2398:6;2405:2;2398:10;;;;;;;;:::i;:::-;;;;;;;;;;;;2391:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2322:91;;;:::o;1036:85:0:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;4408:244:2:-;4483:7;4453:14;:26;4468:10;4453:26;;;;;;;;;;;;;;;;:37;;4445:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;4559:7;4529:14;:26;4544:10;4529:26;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;4599:4;4572:12;:24;4585:10;4572:24;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;4614:33;4627:10;4639:7;4614:33;;;;;;;:::i;:::-;;;;;;;;4408:244::o;1702:170::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1811:10:2::1;1783:14;:25;1798:9;1783:25;;;;;;;;;;;;;;;:38;;;;1832:35;1845:9;1856:10;1832:35;;;;;;;:::i;:::-;;;;;;;;1702:170:::0;;:::o;1974:137::-;2015:7;2065:1;2036:14;:26;2051:10;2036:26;;;;;;;;;;;;;;;;:30;;2029:38;;;;:::i;:::-;;2080:14;:26;2095:10;2080:26;;;;;;;;;;;;;;;;2073:33;;1974:137;:::o;4011:240::-;4086:6;4056:14;:26;4071:10;4056:26;;;;;;;;;;;;;;;;:36;;4048:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;4160:6;4130:14;:26;4145:10;4130:26;;;;;;;;;;;;;;;;:36;;;;;;;:::i;:::-;;;;;;;;4199:3;4172:12;:24;4185:10;4172:24;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;4214:32;4227:10;4239:6;4214:32;;;;;;;:::i;:::-;;;;;;;;4011:240::o;2906:176::-;3016:13;2987:14;:26;3002:10;2987:26;;;;;;;;;;;;;;;:42;;;;3062:15;3035:12;:24;3048:10;3035:24;;;;;;;;;;;;;;;:42;;;;2906:176;;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::o;88:117:3:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:108::-;1454:24;1472:5;1454:24;:::i;:::-;1449:3;1442:37;1377:108;;:::o;1491:180::-;1539:77;1536:1;1529:88;1636:4;1633:1;1626:15;1660:4;1657:1;1650:15;1677:114;1759:1;1752:5;1749:12;1739:46;;1765:18;;:::i;:::-;1739:46;1677:114;:::o;1797:129::-;1843:7;1872:5;1861:16;;1878:42;1914:5;1878:42;:::i;:::-;1797:129;;;:::o;1932:::-;1989:9;2022:33;2049:5;2022:33;:::i;:::-;2009:46;;1932:129;;;:::o;2067:135::-;2151:44;2189:5;2151:44;:::i;:::-;2146:3;2139:57;2067:135;;:::o;2208:126::-;2245:7;2285:42;2278:5;2274:54;2263:65;;2208:126;;;:::o;2340:96::-;2377:7;2406:24;2424:5;2406:24;:::i;:::-;2395:35;;2340:96;;;:::o;2442:108::-;2519:24;2537:5;2519:24;:::i;:::-;2514:3;2507:37;2442:108;;:::o;2618:863::-;2759:4;2754:3;2750:14;2844:4;2837:5;2833:16;2827:23;2863:63;2920:4;2915:3;2911:14;2897:12;2863:63;:::i;:::-;2774:162;3019:4;3012:5;3008:16;3002:23;3038:63;3095:4;3090:3;3086:14;3072:12;3038:63;:::i;:::-;2946:165;3195:4;3188:5;3184:16;3178:23;3214:70;3278:4;3273:3;3269:14;3255:12;3214:70;:::i;:::-;3121:173;3382:4;3375:5;3371:16;3365:23;3401:63;3458:4;3453:3;3449:14;3435:12;3401:63;:::i;:::-;3304:170;2728:753;2618:863;;:::o;3487:311::-;3624:4;3662:3;3651:9;3647:19;3639:27;;3676:115;3788:1;3777:9;3773:17;3764:6;3676:115;:::i;:::-;3487:311;;;;:::o;3804:118::-;3891:24;3909:5;3891:24;:::i;:::-;3886:3;3879:37;3804:118;;:::o;3928:222::-;4021:4;4059:2;4048:9;4044:18;4036:26;;4072:71;4140:1;4129:9;4125:17;4116:6;4072:71;:::i;:::-;3928:222;;;;:::o;4156:122::-;4229:24;4247:5;4229:24;:::i;:::-;4222:5;4219:35;4209:63;;4268:1;4265;4258:12;4209:63;4156:122;:::o;4284:139::-;4330:5;4368:6;4355:20;4346:29;;4384:33;4411:5;4384:33;:::i;:::-;4284:139;;;;:::o;4429:474::-;4497:6;4505;4554:2;4542:9;4533:7;4529:23;4525:32;4522:119;;;4560:79;;:::i;:::-;4522:119;4680:1;4705:53;4750:7;4741:6;4730:9;4726:22;4705:53;:::i;:::-;4695:63;;4651:117;4807:2;4833:53;4878:7;4869:6;4858:9;4854:22;4833:53;:::i;:::-;4823:63;;4778:118;4429:474;;;;;:::o;4909:::-;4977:6;4985;5034:2;5022:9;5013:7;5009:23;5005:32;5002:119;;;5040:79;;:::i;:::-;5002:119;5160:1;5185:53;5230:7;5221:6;5210:9;5206:22;5185:53;:::i;:::-;5175:63;;5131:117;5287:2;5313:53;5358:7;5349:6;5338:9;5334:22;5313:53;:::i;:::-;5303:63;;5258:118;4909:474;;;;;:::o;5389:329::-;5448:6;5497:2;5485:9;5476:7;5472:23;5468:32;5465:119;;;5503:79;;:::i;:::-;5465:119;5623:1;5648:53;5693:7;5684:6;5673:9;5669:22;5648:53;:::i;:::-;5638:63;;5594:117;5389:329;;;;:::o;5724:180::-;5772:77;5769:1;5762:88;5869:4;5866:1;5859:15;5893:4;5890:1;5883:15;5910:169;5994:11;6028:6;6023:3;6016:19;6068:4;6063:3;6059:14;6044:29;;5910:169;;;;:::o;6085:164::-;6225:16;6221:1;6213:6;6209:14;6202:40;6085:164;:::o;6255:366::-;6397:3;6418:67;6482:2;6477:3;6418:67;:::i;:::-;6411:74;;6494:93;6583:3;6494:93;:::i;:::-;6612:2;6607:3;6603:12;6596:19;;6255:366;;;:::o;6627:419::-;6793:4;6831:2;6820:9;6816:18;6808:26;;6880:9;6874:4;6870:20;6866:1;6855:9;6851:17;6844:47;6908:131;7034:4;6908:131;:::i;:::-;6900:139;;6627:419;;;:::o;7052:145::-;7146:44;7184:5;7146:44;:::i;:::-;7141:3;7134:57;7052:145;;:::o;7203:567::-;7387:4;7425:3;7414:9;7410:19;7402:27;;7439:71;7507:1;7496:9;7492:17;7483:6;7439:71;:::i;:::-;7520:72;7588:2;7577:9;7573:18;7564:6;7520:72;:::i;:::-;7602:79;7677:2;7666:9;7662:18;7653:6;7602:79;:::i;:::-;7691:72;7759:2;7748:9;7744:18;7735:6;7691:72;:::i;:::-;7203:567;;;;;;;:::o;7776:175::-;7916:27;7912:1;7904:6;7900:14;7893:51;7776:175;:::o;7957:366::-;8099:3;8120:67;8184:2;8179:3;8120:67;:::i;:::-;8113:74;;8196:93;8285:3;8196:93;:::i;:::-;8314:2;8309:3;8305:12;8298:19;;7957:366;;;:::o;8329:419::-;8495:4;8533:2;8522:9;8518:18;8510:26;;8582:9;8576:4;8572:20;8568:1;8557:9;8553:17;8546:47;8610:131;8736:4;8610:131;:::i;:::-;8602:139;;8329:419;;;:::o;8754:180::-;8802:77;8799:1;8792:88;8899:4;8896:1;8889:15;8923:4;8920:1;8913:15;8940:191;8980:4;9000:20;9018:1;9000:20;:::i;:::-;8995:25;;9034:20;9052:1;9034:20;:::i;:::-;9029:25;;9073:1;9070;9067:8;9064:34;;;9078:18;;:::i;:::-;9064:34;9123:1;9120;9116:9;9108:17;;8940:191;;;;:::o;9137:305::-;9177:3;9196:20;9214:1;9196:20;:::i;:::-;9191:25;;9230:20;9248:1;9230:20;:::i;:::-;9225:25;;9384:1;9316:66;9312:74;9309:1;9306:81;9303:107;;;9390:18;;:::i;:::-;9303:107;9434:1;9431;9427:9;9420:16;;9137:305;;;;:::o;9448:88::-;9496:7;9525:5;9514:16;;9448:88;;;:::o;9542:60::-;9570:3;9591:5;9584:12;;9542:60;;;:::o;9608:164::-;9669:9;9702:64;9720:45;9729:35;9758:5;9729:35;:::i;:::-;9720:45;:::i;:::-;9702:64;:::i;:::-;9689:77;;9608:164;;;:::o;9778:153::-;9876:48;9918:5;9876:48;:::i;:::-;9871:3;9864:61;9778:153;;:::o;9937:354::-;10069:4;10107:2;10096:9;10092:18;10084:26;;10120:71;10188:1;10177:9;10173:17;10164:6;10120:71;:::i;:::-;10201:83;10280:2;10269:9;10265:18;10256:6;10201:83;:::i;:::-;9937:354;;;;;:::o;10297:174::-;10437:26;10433:1;10425:6;10421:14;10414:50;10297:174;:::o;10477:366::-;10619:3;10640:67;10704:2;10699:3;10640:67;:::i;:::-;10633:74;;10716:93;10805:3;10716:93;:::i;:::-;10834:2;10829:3;10825:12;10818:19;;10477:366;;;:::o;10849:419::-;11015:4;11053:2;11042:9;11038:18;11030:26;;11102:9;11096:4;11092:20;11088:1;11077:9;11073:17;11066:47;11130:131;11256:4;11130:131;:::i;:::-;11122:139;;10849:419;;;:::o;11274:87::-;11321:7;11350:5;11339:16;;11274:87;;;:::o;11367:162::-;11427:9;11460:63;11478:44;11487:34;11515:5;11487:34;:::i;:::-;11478:44;:::i;:::-;11460:63;:::i;:::-;11447:76;;11367:162;;;:::o;11535:151::-;11632:47;11673:5;11632:47;:::i;:::-;11627:3;11620:60;11535:151;;:::o;11692:352::-;11823:4;11861:2;11850:9;11846:18;11838:26;;11874:71;11942:1;11931:9;11927:17;11918:6;11874:71;:::i;:::-;11955:82;12033:2;12022:9;12018:18;12009:6;11955:82;:::i;:::-;11692:352;;;;;:::o;12050:182::-;12190:34;12186:1;12178:6;12174:14;12167:58;12050:182;:::o;12238:366::-;12380:3;12401:67;12465:2;12460:3;12401:67;:::i;:::-;12394:74;;12477:93;12566:3;12477:93;:::i;:::-;12595:2;12590:3;12586:12;12579:19;;12238:366;;;:::o;12610:419::-;12776:4;12814:2;12803:9;12799:18;12791:26;;12863:9;12857:4;12853:20;12849:1;12838:9;12834:17;12827:47;12891:131;13017:4;12891:131;:::i;:::-;12883:139;;12610:419;;;:::o;13035:178::-;13175:30;13171:1;13163:6;13159:14;13152:54;13035:178;:::o;13219:366::-;13361:3;13382:67;13446:2;13441:3;13382:67;:::i;:::-;13375:74;;13458:93;13547:3;13458:93;:::i;:::-;13576:2;13571:3;13567:12;13560:19;;13219:366;;;:::o;13591:419::-;13757:4;13795:2;13784:9;13780:18;13772:26;;13844:9;13838:4;13834:20;13830:1;13819:9;13815:17;13808:47;13872:131;13998:4;13872:131;:::i;:::-;13864:139;;13591:419;;;:::o;14016:91::-;14067:7;14096:5;14085:16;;14016:91;;;:::o;14113:170::-;14177:9;14210:67;14228:48;14237:38;14269:5;14237:38;:::i;:::-;14228:48;:::i;:::-;14210:67;:::i;:::-;14197:80;;14113:170;;;:::o;14289:159::-;14390:51;14435:5;14390:51;:::i;:::-;14385:3;14378:64;14289:159;;:::o;14454:360::-;14589:4;14627:2;14616:9;14612:18;14604:26;;14640:71;14708:1;14697:9;14693:17;14684:6;14640:71;:::i;:::-;14721:86;14803:2;14792:9;14788:18;14779:6;14721:86;:::i;:::-;14454:360;;;;;:::o;14820:332::-;14941:4;14979:2;14968:9;14964:18;14956:26;;14992:71;15060:1;15049:9;15045:17;15036:6;14992:71;:::i;:::-;15073:72;15141:2;15130:9;15126:18;15117:6;15073:72;:::i;:::-;14820:332;;;;;:::o;15158:180::-;15206:77;15203:1;15196:88;15303:4;15300:1;15293:15;15327:4;15324:1;15317:15;15344:177;15484:29;15480:1;15472:6;15468:14;15461:53;15344:177;:::o;15527:366::-;15669:3;15690:67;15754:2;15749:3;15690:67;:::i;:::-;15683:74;;15766:93;15855:3;15766:93;:::i;:::-;15884:2;15879:3;15875:12;15868:19;;15527:366;;;:::o;15899:419::-;16065:4;16103:2;16092:9;16088:18;16080:26;;16152:9;16146:4;16142:20;16138:1;16127:9;16123:17;16116:47;16180:131;16306:4;16180:131;:::i;:::-;16172:139;;15899:419;;;:::o;16324:90::-;16374:7;16403:5;16392:16;;16324:90;;;:::o;16420:168::-;16483:9;16516:66;16534:47;16543:37;16574:5;16543:37;:::i;:::-;16534:47;:::i;:::-;16516:66;:::i;:::-;16503:79;;16420:168;;;:::o;16594:157::-;16694:50;16738:5;16694:50;:::i;:::-;16689:3;16682:63;16594:157;;:::o;16757:358::-;16891:4;16929:2;16918:9;16914:18;16906:26;;16942:71;17010:1;16999:9;16995:17;16986:6;16942:71;:::i;:::-;17023:85;17104:2;17093:9;17089:18;17080:6;17023:85;:::i;:::-;16757:358;;;;;:::o;17121:225::-;17261:34;17257:1;17249:6;17245:14;17238:58;17330:8;17325:2;17317:6;17313:15;17306:33;17121:225;:::o;17352:366::-;17494:3;17515:67;17579:2;17574:3;17515:67;:::i;:::-;17508:74;;17591:93;17680:3;17591:93;:::i;:::-;17709:2;17704:3;17700:12;17693:19;;17352:366;;;:::o;17724:419::-;17890:4;17928:2;17917:9;17913:18;17905:26;;17977:9;17971:4;17967:20;17963:1;17952:9;17948:17;17941:47;18005:131;18131:4;18005:131;:::i;:::-;17997:139;;17724:419;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/// @title A contract for managing user profiles for the blockchain based game Zoodle Clicker\n/// @author Alexander R. D'Alessandro\n/// @dev All function calls are currently implemented without side effects\n/// @custom:experimental This is an experimental contract.\ncontract TestContract is Ownable{\n  \n  \n  mapping(address => uint) private upgradeTotal;\n  mapping(address => uint) private zoodleBalances;\n\n  enum State{Owned, Unowned}\n\n  struct Badge {\n    uint id;\n    uint price;\n    State status;\n    address badgeOwner;\n  }\n\n  // mapping(uint => Badge) private badgeList;\n  Badge[] private badges;\n\n  constructor() {\n   badges.push(Badge({\n     id:0,\n     price:100,\n     status: State.Unowned,\n    badgeOwner: address(0)\n   }));\n\n   badges.push(Badge({\n     id:1,\n     price:100000,\n     status: State.Unowned,\n    badgeOwner: address(0)\n   }));\n\n   badges.push(Badge({\n     id:2,\n     price:1000000,\n     status: State.Unowned,\n    badgeOwner: address(0)\n   }));\n  }\n\n  event ZoodleGifted(address recipient, uint256 giftAmount);\n  event ItemPurchase(address purchaser, uint256 price);\n  event BadgeClaimed(address owner, uint256 badgeId, State status, uint256 price);\n\n  modifier isUnowned(uint id){\n    require(badges[id].status == State.Unowned && badges[id].badgeOwner == address(0), \"Badge is owned\");\n    _;\n  }\n\n  /// @notice Used by the contract owner to gift an amount of zoodle to a user\n  /// @dev used onlyOwner to make sure function is only accessed by owner\n  /// @param recipient adress to recieve Zoodle\n  /// @param giftAmount amount of Zoodle to be gifted\n  function giftZoodle(address recipient, uint256 giftAmount) public onlyOwner{\n    zoodleBalances[recipient] = giftAmount;\n    emit ZoodleGifted(recipient, giftAmount);\n  }\n  \n  /// @notice Used to retrieve the zoodle balance of a user\n  /// @return the balance of a user\n  function getZoodle() public view returns(uint256){\n    assert(zoodleBalances[msg.sender] >=0);\n    return zoodleBalances[msg.sender];\n  }\n\n  /// @notice Used to retrieve badge data\n  /// @dev Can be used upon frontend load to populate badge data\n  /// @param id the id of the badge that we want to retrieve data for\n  /// @return a badge object\n\n  function getBadge(uint256 id) public view returns(Badge memory){\n    return badges[id];\n  }\n\n  /// @notice Used to retrieve the mining power of a specific user\n  /// @dev Can be used upon frontend to load mining power\n  /// @return the mining power of the user\n  function getUpgrades() public view returns(uint256){\n    return upgradeTotal[msg.sender];\n  }\n\n  /// @notice Used to save a users progress on the frontend\n  /// @param zoodleAccrued the amount of zoodle the user mined on frontend\n  /// @param upgradesAccrued the amount of mining power the user accrued on the frontend\n  function saveProfile(uint256 zoodleAccrued, uint256 upgradesAccrued) public{\n    zoodleBalances[msg.sender] = zoodleAccrued;\n    upgradeTotal[msg.sender] = upgradesAccrued;\n  }\n  \n  /// @notice Used to purchase item1 in the shop\n  /// @dev require is used to make sure the user looking to purchase item has enough zoodle accumulated\n  function purchaseItem1() public{\n    require(zoodleBalances[msg.sender] >= 100, \"Balance is less than 100\");\n    zoodleBalances[msg.sender] -= 100;\n    upgradeTotal[msg.sender] +=5;\n    emit ItemPurchase(msg.sender, 100);\n  }\n\n  /// @notice Used to purchase item2 in the shop\n  /// @dev require is used to make sure the user looking to purchase item has enough zoodle accumulated\n  function purchaseItem2() public{\n    require(zoodleBalances[msg.sender] >= 1000, \"Balance is less than 1000\");\n    zoodleBalances[msg.sender] -= 1000;\n    upgradeTotal[msg.sender] +=50;\n     emit ItemPurchase(msg.sender, 1000);\n  }\n\n  /// @notice Used to purchase item3 in the shop\n  /// @dev require is used to make sure the user looking to purchase item has enough zoodle accumulated\n  function purchaseItem3() public{\n    require(zoodleBalances[msg.sender] >= 100000, \"Balance is less than 100000\");\n    zoodleBalances[msg.sender] -= 100000;\n    upgradeTotal[msg.sender] +=500;\n     emit ItemPurchase(msg.sender, 100000);\n  }\n\n  /// @notice Used to purchase item4 in the shop\n  /// @dev require is used to make sure the user looking to purchase item has enough zoodle accumulated\n  function purchaseItem4() public{\n    require(zoodleBalances[msg.sender] >= 1000000, \"Balance is less than 1000000\");\n    zoodleBalances[msg.sender] -= 1000000;\n    upgradeTotal[msg.sender] +=5000;\n    emit ItemPurchase(msg.sender, 1000000);\n  }\n\n  /// @notice Used to claim a badge\n  /// @dev require is used to make sure the user looking to claim the badge has enough Zoodle\n  /// @param id the id of the badge that the user is looking to claim\n  function claimBadge(uint256 id) public isUnowned(id){\n    require(zoodleBalances[msg.sender] >= badges[id].price);\n    badges[id].status = State.Owned;\n    badges[id].badgeOwner = msg.sender;\n    emit BadgeClaimed(msg.sender, id, badges[id].status,badges[id].price);\n  }\n\n}\n",
  "sourcePath": "/Users/alexdalessandro/Desktop/solidity/blockchain-developer-bootcamp-final-project/contracts/TestContract.sol",
  "ast": {
    "absolutePath": "project:/contracts/TestContract.sol",
    "exportedSymbols": {
      "Context": [
        126
      ],
      "Ownable": [
        104
      ],
      "TestContract": [
        541
      ]
    },
    "id": 542,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 128,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 129,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 542,
        "sourceUnit": 105,
        "src": "66:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 131,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "411:7:2"
            },
            "id": 132,
            "nodeType": "InheritanceSpecifier",
            "src": "411:7:2"
          }
        ],
        "canonicalName": "TestContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 130,
          "nodeType": "StructuredDocumentation",
          "src": "120:266:2",
          "text": "@title A contract for managing user profiles for the blockchain based game Zoodle Clicker\n @author Alexander R. D'Alessandro\n @dev All function calls are currently implemented without side effects\n @custom:experimental This is an experimental contract."
        },
        "fullyImplemented": true,
        "id": 541,
        "linearizedBaseContracts": [
          541,
          104,
          126
        ],
        "name": "TestContract",
        "nameLocation": "395:12:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 136,
            "mutability": "mutable",
            "name": "upgradeTotal",
            "nameLocation": "461:12:2",
            "nodeType": "VariableDeclaration",
            "scope": 541,
            "src": "428:45:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 135,
              "keyType": {
                "id": 133,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "436:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "428:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 134,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "447:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 140,
            "mutability": "mutable",
            "name": "zoodleBalances",
            "nameLocation": "510:14:2",
            "nodeType": "VariableDeclaration",
            "scope": 541,
            "src": "477:47:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 139,
              "keyType": {
                "id": 137,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "485:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "477:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 138,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "496:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "canonicalName": "TestContract.State",
            "id": 143,
            "members": [
              {
                "id": 141,
                "name": "Owned",
                "nameLocation": "540:5:2",
                "nodeType": "EnumValue",
                "src": "540:5:2"
              },
              {
                "id": 142,
                "name": "Unowned",
                "nameLocation": "547:7:2",
                "nodeType": "EnumValue",
                "src": "547:7:2"
              }
            ],
            "name": "State",
            "nameLocation": "534:5:2",
            "nodeType": "EnumDefinition",
            "src": "529:26:2"
          },
          {
            "canonicalName": "TestContract.Badge",
            "id": 153,
            "members": [
              {
                "constant": false,
                "id": 145,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "583:2:2",
                "nodeType": "VariableDeclaration",
                "scope": 153,
                "src": "578:7:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 144,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "578:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 147,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "596:5:2",
                "nodeType": "VariableDeclaration",
                "scope": 153,
                "src": "591:10:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 146,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "591:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 150,
                "mutability": "mutable",
                "name": "status",
                "nameLocation": "613:6:2",
                "nodeType": "VariableDeclaration",
                "scope": 153,
                "src": "607:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_State_$143",
                  "typeString": "enum TestContract.State"
                },
                "typeName": {
                  "id": 149,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 148,
                    "name": "State",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 143,
                    "src": "607:5:2"
                  },
                  "referencedDeclaration": 143,
                  "src": "607:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$143",
                    "typeString": "enum TestContract.State"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 152,
                "mutability": "mutable",
                "name": "badgeOwner",
                "nameLocation": "633:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 153,
                "src": "625:18:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 151,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "625:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Badge",
            "nameLocation": "566:5:2",
            "nodeType": "StructDefinition",
            "scope": 541,
            "src": "559:89:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 157,
            "mutability": "mutable",
            "name": "badges",
            "nameLocation": "715:6:2",
            "nodeType": "VariableDeclaration",
            "scope": 541,
            "src": "699:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Badge_$153_storage_$dyn_storage",
              "typeString": "struct TestContract.Badge[]"
            },
            "typeName": {
              "baseType": {
                "id": 155,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 154,
                  "name": "Badge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 153,
                  "src": "699:5:2"
                },
                "referencedDeclaration": 153,
                "src": "699:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Badge_$153_storage_ptr",
                  "typeString": "struct TestContract.Badge"
                }
              },
              "id": 156,
              "nodeType": "ArrayTypeName",
              "src": "699:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Badge_$153_storage_$dyn_storage_ptr",
                "typeString": "struct TestContract.Badge[]"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 205,
              "nodeType": "Block",
              "src": "740:353:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "773:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "313030",
                            "id": 165,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "787:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          {
                            "expression": {
                              "id": 166,
                              "name": "State",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 143,
                              "src": "805:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_State_$143_$",
                                "typeString": "type(enum TestContract.State)"
                              }
                            },
                            "id": 167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Unowned",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 142,
                            "src": "805:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$143",
                              "typeString": "enum TestContract.State"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 170,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "844:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 169,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "836:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 168,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "836:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 171,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "836:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            {
                              "typeIdentifier": "t_enum$_State_$143",
                              "typeString": "enum TestContract.State"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 163,
                          "name": "Badge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 153,
                          "src": "757:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Badge_$153_storage_ptr_$",
                            "typeString": "type(struct TestContract.Badge storage pointer)"
                          }
                        },
                        "id": 172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "id",
                          "price",
                          "status",
                          "badgeOwner"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "757:95:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Badge_$153_memory_ptr",
                          "typeString": "struct TestContract.Badge memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Badge_$153_memory_ptr",
                          "typeString": "struct TestContract.Badge memory"
                        }
                      ],
                      "expression": {
                        "id": 160,
                        "name": "badges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "745:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Badge_$153_storage_$dyn_storage",
                          "typeString": "struct TestContract.Badge storage ref[] storage ref"
                        }
                      },
                      "id": 162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "745:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Badge_$153_storage_$dyn_storage_ptr_$_t_struct$_Badge_$153_storage_$returns$__$bound_to$_t_array$_t_struct$_Badge_$153_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct TestContract.Badge storage ref[] storage pointer,struct TestContract.Badge storage ref)"
                      }
                    },
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "745:108:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "745:108:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "887:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          {
                            "hexValue": "313030303030",
                            "id": 180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "901:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000_by_1",
                              "typeString": "int_const 100000"
                            },
                            "value": "100000"
                          },
                          {
                            "expression": {
                              "id": 181,
                              "name": "State",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 143,
                              "src": "922:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_State_$143_$",
                                "typeString": "type(enum TestContract.State)"
                              }
                            },
                            "id": 182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Unowned",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 142,
                            "src": "922:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$143",
                              "typeString": "enum TestContract.State"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 185,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "961:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 184,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "953:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 183,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "953:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 186,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "953:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            {
                              "typeIdentifier": "t_rational_100000_by_1",
                              "typeString": "int_const 100000"
                            },
                            {
                              "typeIdentifier": "t_enum$_State_$143",
                              "typeString": "enum TestContract.State"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 178,
                          "name": "Badge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 153,
                          "src": "871:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Badge_$153_storage_ptr_$",
                            "typeString": "type(struct TestContract.Badge storage pointer)"
                          }
                        },
                        "id": 187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "id",
                          "price",
                          "status",
                          "badgeOwner"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "871:98:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Badge_$153_memory_ptr",
                          "typeString": "struct TestContract.Badge memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Badge_$153_memory_ptr",
                          "typeString": "struct TestContract.Badge memory"
                        }
                      ],
                      "expression": {
                        "id": 175,
                        "name": "badges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "859:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Badge_$153_storage_$dyn_storage",
                          "typeString": "struct TestContract.Badge storage ref[] storage ref"
                        }
                      },
                      "id": 177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "859:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Badge_$153_storage_$dyn_storage_ptr_$_t_struct$_Badge_$153_storage_$returns$__$bound_to$_t_array$_t_struct$_Badge_$153_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct TestContract.Badge storage ref[] storage pointer,struct TestContract.Badge storage ref)"
                      }
                    },
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "859:111:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 189,
                  "nodeType": "ExpressionStatement",
                  "src": "859:111:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1004:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          {
                            "hexValue": "31303030303030",
                            "id": 195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1018:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            },
                            "value": "1000000"
                          },
                          {
                            "expression": {
                              "id": 196,
                              "name": "State",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 143,
                              "src": "1040:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_State_$143_$",
                                "typeString": "type(enum TestContract.State)"
                              }
                            },
                            "id": 197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Unowned",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 142,
                            "src": "1040:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$143",
                              "typeString": "enum TestContract.State"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 200,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1079:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 199,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1071:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 198,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1071:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1071:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            },
                            {
                              "typeIdentifier": "t_enum$_State_$143",
                              "typeString": "enum TestContract.State"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 193,
                          "name": "Badge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 153,
                          "src": "988:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Badge_$153_storage_ptr_$",
                            "typeString": "type(struct TestContract.Badge storage pointer)"
                          }
                        },
                        "id": 202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "id",
                          "price",
                          "status",
                          "badgeOwner"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "988:99:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Badge_$153_memory_ptr",
                          "typeString": "struct TestContract.Badge memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Badge_$153_memory_ptr",
                          "typeString": "struct TestContract.Badge memory"
                        }
                      ],
                      "expression": {
                        "id": 190,
                        "name": "badges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "976:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Badge_$153_storage_$dyn_storage",
                          "typeString": "struct TestContract.Badge storage ref[] storage ref"
                        }
                      },
                      "id": 192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "976:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Badge_$153_storage_$dyn_storage_ptr_$_t_struct$_Badge_$153_storage_$returns$__$bound_to$_t_array$_t_struct$_Badge_$153_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct TestContract.Badge storage ref[] storage pointer,struct TestContract.Badge storage ref)"
                      }
                    },
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "976:112:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "976:112:2"
                }
              ]
            },
            "id": 206,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "737:2:2"
            },
            "returnParameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "740:0:2"
            },
            "scope": 541,
            "src": "726:367:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 212,
            "name": "ZoodleGifted",
            "nameLocation": "1103:12:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 208,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1124:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "1116:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1116:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 210,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "giftAmount",
                  "nameLocation": "1143:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "1135:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 209,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1135:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1115:39:2"
            },
            "src": "1097:58:2"
          },
          {
            "anonymous": false,
            "id": 218,
            "name": "ItemPurchase",
            "nameLocation": "1164:12:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 214,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "purchaser",
                  "nameLocation": "1185:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 218,
                  "src": "1177:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1177:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 216,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "1204:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 218,
                  "src": "1196:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 215,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1196:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1176:34:2"
            },
            "src": "1158:53:2"
          },
          {
            "anonymous": false,
            "id": 229,
            "name": "BadgeClaimed",
            "nameLocation": "1220:12:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 220,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1241:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 229,
                  "src": "1233:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 219,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1233:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 222,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "badgeId",
                  "nameLocation": "1256:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 229,
                  "src": "1248:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 221,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1248:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 225,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "1271:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 229,
                  "src": "1265:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$143",
                    "typeString": "enum TestContract.State"
                  },
                  "typeName": {
                    "id": 224,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 223,
                      "name": "State",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 143,
                      "src": "1265:5:2"
                    },
                    "referencedDeclaration": 143,
                    "src": "1265:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$143",
                      "typeString": "enum TestContract.State"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 227,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "1287:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 229,
                  "src": "1279:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 226,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1279:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1232:61:2"
            },
            "src": "1214:80:2"
          },
          {
            "body": {
              "id": 255,
              "nodeType": "Block",
              "src": "1325:118:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_State_$143",
                            "typeString": "enum TestContract.State"
                          },
                          "id": 240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 234,
                                "name": "badges",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 157,
                                "src": "1339:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Badge_$153_storage_$dyn_storage",
                                  "typeString": "struct TestContract.Badge storage ref[] storage ref"
                                }
                              },
                              "id": 236,
                              "indexExpression": {
                                "id": 235,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 231,
                                "src": "1346:2:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1339:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Badge_$153_storage",
                                "typeString": "struct TestContract.Badge storage ref"
                              }
                            },
                            "id": 237,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 150,
                            "src": "1339:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$143",
                              "typeString": "enum TestContract.State"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 238,
                              "name": "State",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 143,
                              "src": "1360:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_State_$143_$",
                                "typeString": "type(enum TestContract.State)"
                              }
                            },
                            "id": 239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Unowned",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 142,
                            "src": "1360:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$143",
                              "typeString": "enum TestContract.State"
                            }
                          },
                          "src": "1339:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 241,
                                "name": "badges",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 157,
                                "src": "1377:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Badge_$153_storage_$dyn_storage",
                                  "typeString": "struct TestContract.Badge storage ref[] storage ref"
                                }
                              },
                              "id": 243,
                              "indexExpression": {
                                "id": 242,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 231,
                                "src": "1384:2:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1377:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Badge_$153_storage",
                                "typeString": "struct TestContract.Badge storage ref"
                              }
                            },
                            "id": 244,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "badgeOwner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 152,
                            "src": "1377:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 247,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1410:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 246,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1402:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 245,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1402:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1402:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1377:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1339:73:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4261646765206973206f776e6564",
                        "id": 251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1414:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ca92dfa1569f43c2e3a55b5cc2c6800798cb1dfebd0b0f3d0a0b69772d23e8d6",
                          "typeString": "literal_string \"Badge is owned\""
                        },
                        "value": "Badge is owned"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ca92dfa1569f43c2e3a55b5cc2c6800798cb1dfebd0b0f3d0a0b69772d23e8d6",
                          "typeString": "literal_string \"Badge is owned\""
                        }
                      ],
                      "id": 233,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1331:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1331:100:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 253,
                  "nodeType": "ExpressionStatement",
                  "src": "1331:100:2"
                },
                {
                  "id": 254,
                  "nodeType": "PlaceholderStatement",
                  "src": "1437:1:2"
                }
              ]
            },
            "id": 256,
            "name": "isUnowned",
            "nameLocation": "1307:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 231,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1322:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "1317:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 230,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1317:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1316:9:2"
            },
            "src": "1298:145:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 277,
              "nodeType": "Block",
              "src": "1777:95:2",
              "statements": [
                {
                  "expression": {
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 266,
                        "name": "zoodleBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "1783:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 268,
                      "indexExpression": {
                        "id": 267,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 259,
                        "src": "1798:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1783:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 269,
                      "name": "giftAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 261,
                      "src": "1811:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1783:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 271,
                  "nodeType": "ExpressionStatement",
                  "src": "1783:38:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 273,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 259,
                        "src": "1845:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 274,
                        "name": "giftAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 261,
                        "src": "1856:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 272,
                      "name": "ZoodleGifted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 212,
                      "src": "1832:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1832:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 276,
                  "nodeType": "EmitStatement",
                  "src": "1827:40:2"
                }
              ]
            },
            "documentation": {
              "id": 257,
              "nodeType": "StructuredDocumentation",
              "src": "1447:252:2",
              "text": "@notice Used by the contract owner to gift an amount of zoodle to a user\n @dev used onlyOwner to make sure function is only accessed by owner\n @param recipient adress to recieve Zoodle\n @param giftAmount amount of Zoodle to be gifted"
            },
            "functionSelector": "b4fe5340",
            "id": 278,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 264,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 263,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "1768:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1768:9:2"
              }
            ],
            "name": "giftZoodle",
            "nameLocation": "1711:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 259,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1730:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 278,
                  "src": "1722:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 258,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1722:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 261,
                  "mutability": "mutable",
                  "name": "giftAmount",
                  "nameLocation": "1749:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 278,
                  "src": "1741:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 260,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1741:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1721:39:2"
            },
            "returnParameters": {
              "id": 265,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1777:0:2"
            },
            "scope": 541,
            "src": "1702:170:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 298,
              "nodeType": "Block",
              "src": "2023:88:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 285,
                            "name": "zoodleBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 140,
                            "src": "2036:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 288,
                          "indexExpression": {
                            "expression": {
                              "id": 286,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2051:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2051:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2036:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2065:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2036:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 284,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "2029:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2029:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 292,
                  "nodeType": "ExpressionStatement",
                  "src": "2029:38:2"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 293,
                      "name": "zoodleBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 140,
                      "src": "2080:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 296,
                    "indexExpression": {
                      "expression": {
                        "id": 294,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2095:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2095:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2080:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 283,
                  "id": 297,
                  "nodeType": "Return",
                  "src": "2073:33:2"
                }
              ]
            },
            "documentation": {
              "id": 279,
              "nodeType": "StructuredDocumentation",
              "src": "1878:93:2",
              "text": "@notice Used to retrieve the zoodle balance of a user\n @return the balance of a user"
            },
            "functionSelector": "bfad85e5",
            "id": 299,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getZoodle",
            "nameLocation": "1983:9:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 280,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1992:2:2"
            },
            "returnParameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 282,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 299,
                  "src": "2015:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 281,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2015:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2014:9:2"
            },
            "scope": 541,
            "src": "1974:137:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 312,
              "nodeType": "Block",
              "src": "2385:28:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 308,
                      "name": "badges",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157,
                      "src": "2398:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Badge_$153_storage_$dyn_storage",
                        "typeString": "struct TestContract.Badge storage ref[] storage ref"
                      }
                    },
                    "id": 310,
                    "indexExpression": {
                      "id": 309,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 302,
                      "src": "2405:2:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2398:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Badge_$153_storage",
                      "typeString": "struct TestContract.Badge storage ref"
                    }
                  },
                  "functionReturnParameters": 307,
                  "id": 311,
                  "nodeType": "Return",
                  "src": "2391:17:2"
                }
              ]
            },
            "documentation": {
              "id": 300,
              "nodeType": "StructuredDocumentation",
              "src": "2115:204:2",
              "text": "@notice Used to retrieve badge data\n @dev Can be used upon frontend load to populate badge data\n @param id the id of the badge that we want to retrieve data for\n @return a badge object"
            },
            "functionSelector": "8d838622",
            "id": 313,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBadge",
            "nameLocation": "2331:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 302,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2348:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 313,
                  "src": "2340:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2340:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2339:12:2"
            },
            "returnParameters": {
              "id": 307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 306,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 313,
                  "src": "2372:12:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Badge_$153_memory_ptr",
                    "typeString": "struct TestContract.Badge"
                  },
                  "typeName": {
                    "id": 305,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 304,
                      "name": "Badge",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 153,
                      "src": "2372:5:2"
                    },
                    "referencedDeclaration": 153,
                    "src": "2372:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Badge_$153_storage_ptr",
                      "typeString": "struct TestContract.Badge"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2371:14:2"
            },
            "scope": 541,
            "src": "2322:91:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 324,
              "nodeType": "Block",
              "src": "2636:42:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 319,
                      "name": "upgradeTotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 136,
                      "src": "2649:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 322,
                    "indexExpression": {
                      "expression": {
                        "id": 320,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2662:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2662:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2649:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 318,
                  "id": 323,
                  "nodeType": "Return",
                  "src": "2642:31:2"
                }
              ]
            },
            "documentation": {
              "id": 314,
              "nodeType": "StructuredDocumentation",
              "src": "2417:165:2",
              "text": "@notice Used to retrieve the mining power of a specific user\n @dev Can be used upon frontend to load mining power\n @return the mining power of the user"
            },
            "functionSelector": "695bd00c",
            "id": 325,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUpgrades",
            "nameLocation": "2594:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 315,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2605:2:2"
            },
            "returnParameters": {
              "id": 318,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 317,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 325,
                  "src": "2628:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 316,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2628:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2627:9:2"
            },
            "scope": 541,
            "src": "2585:93:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 347,
              "nodeType": "Block",
              "src": "2981:101:2",
              "statements": [
                {
                  "expression": {
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 333,
                        "name": "zoodleBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "2987:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 336,
                      "indexExpression": {
                        "expression": {
                          "id": 334,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3002:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3002:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2987:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 337,
                      "name": "zoodleAccrued",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 328,
                      "src": "3016:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2987:42:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 339,
                  "nodeType": "ExpressionStatement",
                  "src": "2987:42:2"
                },
                {
                  "expression": {
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 340,
                        "name": "upgradeTotal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 136,
                        "src": "3035:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 343,
                      "indexExpression": {
                        "expression": {
                          "id": 341,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3048:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3048:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3035:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 344,
                      "name": "upgradesAccrued",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 330,
                      "src": "3062:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3035:42:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 346,
                  "nodeType": "ExpressionStatement",
                  "src": "3035:42:2"
                }
              ]
            },
            "documentation": {
              "id": 326,
              "nodeType": "StructuredDocumentation",
              "src": "2682:221:2",
              "text": "@notice Used to save a users progress on the frontend\n @param zoodleAccrued the amount of zoodle the user mined on frontend\n @param upgradesAccrued the amount of mining power the user accrued on the frontend"
            },
            "functionSelector": "f055cf76",
            "id": 348,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "saveProfile",
            "nameLocation": "2915:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 328,
                  "mutability": "mutable",
                  "name": "zoodleAccrued",
                  "nameLocation": "2935:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 348,
                  "src": "2927:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 327,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2927:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 330,
                  "mutability": "mutable",
                  "name": "upgradesAccrued",
                  "nameLocation": "2958:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 348,
                  "src": "2950:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 329,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2950:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2926:48:2"
            },
            "returnParameters": {
              "id": 332,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2981:0:2"
            },
            "scope": 541,
            "src": "2906:176:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 382,
              "nodeType": "Block",
              "src": "3272:194:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 353,
                            "name": "zoodleBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 140,
                            "src": "3286:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 356,
                          "indexExpression": {
                            "expression": {
                              "id": 354,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3301:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3301:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3286:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3316:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "3286:33:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42616c616e6365206973206c657373207468616e20313030",
                        "id": 359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3321:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dd6426bca85c04495b9ec0e29ac3d57760204185c8dfb7452c2f86678998639b",
                          "typeString": "literal_string \"Balance is less than 100\""
                        },
                        "value": "Balance is less than 100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dd6426bca85c04495b9ec0e29ac3d57760204185c8dfb7452c2f86678998639b",
                          "typeString": "literal_string \"Balance is less than 100\""
                        }
                      ],
                      "id": 352,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3278:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3278:70:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 361,
                  "nodeType": "ExpressionStatement",
                  "src": "3278:70:2"
                },
                {
                  "expression": {
                    "id": 367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 362,
                        "name": "zoodleBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "3354:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 365,
                      "indexExpression": {
                        "expression": {
                          "id": 363,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3369:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3369:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3354:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "313030",
                      "id": 366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3384:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "3354:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 368,
                  "nodeType": "ExpressionStatement",
                  "src": "3354:33:2"
                },
                {
                  "expression": {
                    "id": 374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 369,
                        "name": "upgradeTotal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 136,
                        "src": "3393:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 372,
                      "indexExpression": {
                        "expression": {
                          "id": 370,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3406:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3406:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3393:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "35",
                      "id": 373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3420:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "src": "3393:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 375,
                  "nodeType": "ExpressionStatement",
                  "src": "3393:28:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 377,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3445:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3445:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3457:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "id": 376,
                      "name": "ItemPurchase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 218,
                      "src": "3432:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3432:29:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 381,
                  "nodeType": "EmitStatement",
                  "src": "3427:34:2"
                }
              ]
            },
            "documentation": {
              "id": 349,
              "nodeType": "StructuredDocumentation",
              "src": "3088:150:2",
              "text": "@notice Used to purchase item1 in the shop\n @dev require is used to make sure the user looking to purchase item has enough zoodle accumulated"
            },
            "functionSelector": "70fc63ae",
            "id": 383,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "purchaseItem1",
            "nameLocation": "3250:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 350,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3263:2:2"
            },
            "returnParameters": {
              "id": 351,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3272:0:2"
            },
            "scope": 541,
            "src": "3241:225:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 417,
              "nodeType": "Block",
              "src": "3654:200:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 388,
                            "name": "zoodleBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 140,
                            "src": "3668:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 391,
                          "indexExpression": {
                            "expression": {
                              "id": 389,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3683:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3683:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3668:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3698:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "3668:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42616c616e6365206973206c657373207468616e2031303030",
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3704:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_74e75d695ac64f334ab3691dd3394382a45b98fcd943c0a73e5cef47fe00a7af",
                          "typeString": "literal_string \"Balance is less than 1000\""
                        },
                        "value": "Balance is less than 1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_74e75d695ac64f334ab3691dd3394382a45b98fcd943c0a73e5cef47fe00a7af",
                          "typeString": "literal_string \"Balance is less than 1000\""
                        }
                      ],
                      "id": 387,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3660:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3660:72:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 396,
                  "nodeType": "ExpressionStatement",
                  "src": "3660:72:2"
                },
                {
                  "expression": {
                    "id": 402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 397,
                        "name": "zoodleBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "3738:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 400,
                      "indexExpression": {
                        "expression": {
                          "id": 398,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3753:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3753:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3738:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31303030",
                      "id": 401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3768:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000_by_1",
                        "typeString": "int_const 1000"
                      },
                      "value": "1000"
                    },
                    "src": "3738:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 403,
                  "nodeType": "ExpressionStatement",
                  "src": "3738:34:2"
                },
                {
                  "expression": {
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 404,
                        "name": "upgradeTotal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 136,
                        "src": "3778:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 407,
                      "indexExpression": {
                        "expression": {
                          "id": 405,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3791:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3791:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3778:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "3530",
                      "id": 408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3805:2:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50_by_1",
                        "typeString": "int_const 50"
                      },
                      "value": "50"
                    },
                    "src": "3778:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 410,
                  "nodeType": "ExpressionStatement",
                  "src": "3778:29:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 412,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3832:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3832:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3844:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "id": 411,
                      "name": "ItemPurchase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 218,
                      "src": "3819:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3819:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 416,
                  "nodeType": "EmitStatement",
                  "src": "3814:35:2"
                }
              ]
            },
            "documentation": {
              "id": 384,
              "nodeType": "StructuredDocumentation",
              "src": "3470:150:2",
              "text": "@notice Used to purchase item2 in the shop\n @dev require is used to make sure the user looking to purchase item has enough zoodle accumulated"
            },
            "functionSelector": "4e7d1856",
            "id": 418,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "purchaseItem2",
            "nameLocation": "3632:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 385,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3645:2:2"
            },
            "returnParameters": {
              "id": 386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3654:0:2"
            },
            "scope": 541,
            "src": "3623:231:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 452,
              "nodeType": "Block",
              "src": "4042:209:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 423,
                            "name": "zoodleBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 140,
                            "src": "4056:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 426,
                          "indexExpression": {
                            "expression": {
                              "id": 424,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4071:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 425,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4071:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4056:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "313030303030",
                          "id": 427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4086:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          },
                          "value": "100000"
                        },
                        "src": "4056:36:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42616c616e6365206973206c657373207468616e20313030303030",
                        "id": 429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4094:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b45568aa80c97b0bb500ac65ea65976d37e72e49aceb554ad05e27c373b05d77",
                          "typeString": "literal_string \"Balance is less than 100000\""
                        },
                        "value": "Balance is less than 100000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b45568aa80c97b0bb500ac65ea65976d37e72e49aceb554ad05e27c373b05d77",
                          "typeString": "literal_string \"Balance is less than 100000\""
                        }
                      ],
                      "id": 422,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4048:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4048:76:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 431,
                  "nodeType": "ExpressionStatement",
                  "src": "4048:76:2"
                },
                {
                  "expression": {
                    "id": 437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 432,
                        "name": "zoodleBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "4130:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 435,
                      "indexExpression": {
                        "expression": {
                          "id": 433,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4145:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4145:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4130:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "313030303030",
                      "id": 436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4160:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000_by_1",
                        "typeString": "int_const 100000"
                      },
                      "value": "100000"
                    },
                    "src": "4130:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 438,
                  "nodeType": "ExpressionStatement",
                  "src": "4130:36:2"
                },
                {
                  "expression": {
                    "id": 444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 439,
                        "name": "upgradeTotal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 136,
                        "src": "4172:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 442,
                      "indexExpression": {
                        "expression": {
                          "id": 440,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4185:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4185:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4172:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "353030",
                      "id": 443,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4199:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_500_by_1",
                        "typeString": "int_const 500"
                      },
                      "value": "500"
                    },
                    "src": "4172:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 445,
                  "nodeType": "ExpressionStatement",
                  "src": "4172:30:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 447,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4227:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4227:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030303030",
                        "id": 449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4239:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        }
                      ],
                      "id": 446,
                      "name": "ItemPurchase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 218,
                      "src": "4214:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4214:32:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 451,
                  "nodeType": "EmitStatement",
                  "src": "4209:37:2"
                }
              ]
            },
            "documentation": {
              "id": 419,
              "nodeType": "StructuredDocumentation",
              "src": "3858:150:2",
              "text": "@notice Used to purchase item3 in the shop\n @dev require is used to make sure the user looking to purchase item has enough zoodle accumulated"
            },
            "functionSelector": "c8d7cafd",
            "id": 453,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "purchaseItem3",
            "nameLocation": "4020:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4033:2:2"
            },
            "returnParameters": {
              "id": 421,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4042:0:2"
            },
            "scope": 541,
            "src": "4011:240:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 487,
              "nodeType": "Block",
              "src": "4439:213:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 458,
                            "name": "zoodleBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 140,
                            "src": "4453:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 461,
                          "indexExpression": {
                            "expression": {
                              "id": 459,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4468:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 460,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4468:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4453:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "31303030303030",
                          "id": 462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4483:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "value": "1000000"
                        },
                        "src": "4453:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42616c616e6365206973206c657373207468616e2031303030303030",
                        "id": 464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4492:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cd739708401f46218dc1095f4a474a347b3b088ed77f1e1b81dd28cd51ec3151",
                          "typeString": "literal_string \"Balance is less than 1000000\""
                        },
                        "value": "Balance is less than 1000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cd739708401f46218dc1095f4a474a347b3b088ed77f1e1b81dd28cd51ec3151",
                          "typeString": "literal_string \"Balance is less than 1000000\""
                        }
                      ],
                      "id": 457,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4445:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4445:78:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 466,
                  "nodeType": "ExpressionStatement",
                  "src": "4445:78:2"
                },
                {
                  "expression": {
                    "id": 472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 467,
                        "name": "zoodleBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "4529:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 470,
                      "indexExpression": {
                        "expression": {
                          "id": 468,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4544:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4544:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4529:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31303030303030",
                      "id": 471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4559:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      },
                      "value": "1000000"
                    },
                    "src": "4529:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 473,
                  "nodeType": "ExpressionStatement",
                  "src": "4529:37:2"
                },
                {
                  "expression": {
                    "id": 479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 474,
                        "name": "upgradeTotal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 136,
                        "src": "4572:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 477,
                      "indexExpression": {
                        "expression": {
                          "id": 475,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4585:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4585:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4572:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "35303030",
                      "id": 478,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4599:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5000_by_1",
                        "typeString": "int_const 5000"
                      },
                      "value": "5000"
                    },
                    "src": "4572:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 480,
                  "nodeType": "ExpressionStatement",
                  "src": "4572:31:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 482,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4627:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4627:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030303030",
                        "id": 484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4639:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "value": "1000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "id": 481,
                      "name": "ItemPurchase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 218,
                      "src": "4614:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4614:33:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 486,
                  "nodeType": "EmitStatement",
                  "src": "4609:38:2"
                }
              ]
            },
            "documentation": {
              "id": 454,
              "nodeType": "StructuredDocumentation",
              "src": "4255:150:2",
              "text": "@notice Used to purchase item4 in the shop\n @dev require is used to make sure the user looking to purchase item has enough zoodle accumulated"
            },
            "functionSelector": "9f43203a",
            "id": 488,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "purchaseItem4",
            "nameLocation": "4417:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 455,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4430:2:2"
            },
            "returnParameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4439:0:2"
            },
            "scope": 541,
            "src": "4408:244:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 539,
              "nodeType": "Block",
              "src": "4908:218:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 498,
                            "name": "zoodleBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 140,
                            "src": "4922:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 501,
                          "indexExpression": {
                            "expression": {
                              "id": 499,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4937:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 500,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4937:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4922:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 502,
                              "name": "badges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 157,
                              "src": "4952:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Badge_$153_storage_$dyn_storage",
                                "typeString": "struct TestContract.Badge storage ref[] storage ref"
                              }
                            },
                            "id": 504,
                            "indexExpression": {
                              "id": 503,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 491,
                              "src": "4959:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4952:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Badge_$153_storage",
                              "typeString": "struct TestContract.Badge storage ref"
                            }
                          },
                          "id": 505,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 147,
                          "src": "4952:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4922:46:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 497,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4914:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4914:55:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 508,
                  "nodeType": "ExpressionStatement",
                  "src": "4914:55:2"
                },
                {
                  "expression": {
                    "id": 515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 509,
                          "name": "badges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157,
                          "src": "4975:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Badge_$153_storage_$dyn_storage",
                            "typeString": "struct TestContract.Badge storage ref[] storage ref"
                          }
                        },
                        "id": 511,
                        "indexExpression": {
                          "id": 510,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 491,
                          "src": "4982:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4975:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Badge_$153_storage",
                          "typeString": "struct TestContract.Badge storage ref"
                        }
                      },
                      "id": 512,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 150,
                      "src": "4975:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$143",
                        "typeString": "enum TestContract.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 513,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "4995:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$143_$",
                          "typeString": "type(enum TestContract.State)"
                        }
                      },
                      "id": 514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Owned",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 141,
                      "src": "4995:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$143",
                        "typeString": "enum TestContract.State"
                      }
                    },
                    "src": "4975:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$143",
                      "typeString": "enum TestContract.State"
                    }
                  },
                  "id": 516,
                  "nodeType": "ExpressionStatement",
                  "src": "4975:31:2"
                },
                {
                  "expression": {
                    "id": 523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 517,
                          "name": "badges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157,
                          "src": "5012:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Badge_$153_storage_$dyn_storage",
                            "typeString": "struct TestContract.Badge storage ref[] storage ref"
                          }
                        },
                        "id": 519,
                        "indexExpression": {
                          "id": 518,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 491,
                          "src": "5019:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5012:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Badge_$153_storage",
                          "typeString": "struct TestContract.Badge storage ref"
                        }
                      },
                      "id": 520,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "badgeOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 152,
                      "src": "5012:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 521,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "5036:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5036:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5012:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 524,
                  "nodeType": "ExpressionStatement",
                  "src": "5012:34:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 526,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5070:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5070:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 528,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 491,
                        "src": "5082:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 529,
                            "name": "badges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 157,
                            "src": "5086:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Badge_$153_storage_$dyn_storage",
                              "typeString": "struct TestContract.Badge storage ref[] storage ref"
                            }
                          },
                          "id": 531,
                          "indexExpression": {
                            "id": 530,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 491,
                            "src": "5093:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5086:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Badge_$153_storage",
                            "typeString": "struct TestContract.Badge storage ref"
                          }
                        },
                        "id": 532,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "status",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 150,
                        "src": "5086:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$143",
                          "typeString": "enum TestContract.State"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 533,
                            "name": "badges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 157,
                            "src": "5104:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Badge_$153_storage_$dyn_storage",
                              "typeString": "struct TestContract.Badge storage ref[] storage ref"
                            }
                          },
                          "id": 535,
                          "indexExpression": {
                            "id": 534,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 491,
                            "src": "5111:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5104:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Badge_$153_storage",
                            "typeString": "struct TestContract.Badge storage ref"
                          }
                        },
                        "id": 536,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 147,
                        "src": "5104:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_State_$143",
                          "typeString": "enum TestContract.State"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 525,
                      "name": "BadgeClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 229,
                      "src": "5057:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_enum$_State_$143_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,enum TestContract.State,uint256)"
                      }
                    },
                    "id": 537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5057:64:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 538,
                  "nodeType": "EmitStatement",
                  "src": "5052:69:2"
                }
              ]
            },
            "documentation": {
              "id": 489,
              "nodeType": "StructuredDocumentation",
              "src": "4656:197:2",
              "text": "@notice Used to claim a badge\n @dev require is used to make sure the user looking to claim the badge has enough Zoodle\n @param id the id of the badge that the user is looking to claim"
            },
            "functionSelector": "23415135",
            "id": 540,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 494,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 491,
                    "src": "4905:2:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 495,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 493,
                  "name": "isUnowned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 256,
                  "src": "4895:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "4895:13:2"
              }
            ],
            "name": "claimBadge",
            "nameLocation": "4865:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 491,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "4884:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 540,
                  "src": "4876:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 490,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4876:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4875:12:2"
            },
            "returnParameters": {
              "id": 496,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4908:0:2"
            },
            "scope": 541,
            "src": "4856:270:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 542,
        "src": "386:4743:2",
        "usedErrors": []
      }
    ],
    "src": "32:5098:2"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/TestContract.sol",
    "exportedSymbols": {
      "Context": [
        126
      ],
      "Ownable": [
        104
      ],
      "TestContract": [
        541
      ]
    },
    "id": 542,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 128,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 129,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 542,
        "sourceUnit": 105,
        "src": "66:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 131,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "411:7:2"
            },
            "id": 132,
            "nodeType": "InheritanceSpecifier",
            "src": "411:7:2"
          }
        ],
        "canonicalName": "TestContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 130,
          "nodeType": "StructuredDocumentation",
          "src": "120:266:2",
          "text": "@title A contract for managing user profiles for the blockchain based game Zoodle Clicker\n @author Alexander R. D'Alessandro\n @dev All function calls are currently implemented without side effects\n @custom:experimental This is an experimental contract."
        },
        "fullyImplemented": true,
        "id": 541,
        "linearizedBaseContracts": [
          541,
          104,
          126
        ],
        "name": "TestContract",
        "nameLocation": "395:12:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 136,
            "mutability": "mutable",
            "name": "upgradeTotal",
            "nameLocation": "461:12:2",
            "nodeType": "VariableDeclaration",
            "scope": 541,
            "src": "428:45:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 135,
              "keyType": {
                "id": 133,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "436:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "428:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 134,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "447:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 140,
            "mutability": "mutable",
            "name": "zoodleBalances",
            "nameLocation": "510:14:2",
            "nodeType": "VariableDeclaration",
            "scope": 541,
            "src": "477:47:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 139,
              "keyType": {
                "id": 137,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "485:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "477:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 138,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "496:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "canonicalName": "TestContract.State",
            "id": 143,
            "members": [
              {
                "id": 141,
                "name": "Owned",
                "nameLocation": "540:5:2",
                "nodeType": "EnumValue",
                "src": "540:5:2"
              },
              {
                "id": 142,
                "name": "Unowned",
                "nameLocation": "547:7:2",
                "nodeType": "EnumValue",
                "src": "547:7:2"
              }
            ],
            "name": "State",
            "nameLocation": "534:5:2",
            "nodeType": "EnumDefinition",
            "src": "529:26:2"
          },
          {
            "canonicalName": "TestContract.Badge",
            "id": 153,
            "members": [
              {
                "constant": false,
                "id": 145,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "583:2:2",
                "nodeType": "VariableDeclaration",
                "scope": 153,
                "src": "578:7:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 144,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "578:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 147,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "596:5:2",
                "nodeType": "VariableDeclaration",
                "scope": 153,
                "src": "591:10:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 146,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "591:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 150,
                "mutability": "mutable",
                "name": "status",
                "nameLocation": "613:6:2",
                "nodeType": "VariableDeclaration",
                "scope": 153,
                "src": "607:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_State_$143",
                  "typeString": "enum TestContract.State"
                },
                "typeName": {
                  "id": 149,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 148,
                    "name": "State",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 143,
                    "src": "607:5:2"
                  },
                  "referencedDeclaration": 143,
                  "src": "607:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$143",
                    "typeString": "enum TestContract.State"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 152,
                "mutability": "mutable",
                "name": "badgeOwner",
                "nameLocation": "633:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 153,
                "src": "625:18:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 151,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "625:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Badge",
            "nameLocation": "566:5:2",
            "nodeType": "StructDefinition",
            "scope": 541,
            "src": "559:89:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 157,
            "mutability": "mutable",
            "name": "badges",
            "nameLocation": "715:6:2",
            "nodeType": "VariableDeclaration",
            "scope": 541,
            "src": "699:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Badge_$153_storage_$dyn_storage",
              "typeString": "struct TestContract.Badge[]"
            },
            "typeName": {
              "baseType": {
                "id": 155,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 154,
                  "name": "Badge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 153,
                  "src": "699:5:2"
                },
                "referencedDeclaration": 153,
                "src": "699:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Badge_$153_storage_ptr",
                  "typeString": "struct TestContract.Badge"
                }
              },
              "id": 156,
              "nodeType": "ArrayTypeName",
              "src": "699:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Badge_$153_storage_$dyn_storage_ptr",
                "typeString": "struct TestContract.Badge[]"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 205,
              "nodeType": "Block",
              "src": "740:353:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "773:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "313030",
                            "id": 165,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "787:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          {
                            "expression": {
                              "id": 166,
                              "name": "State",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 143,
                              "src": "805:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_State_$143_$",
                                "typeString": "type(enum TestContract.State)"
                              }
                            },
                            "id": 167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Unowned",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 142,
                            "src": "805:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$143",
                              "typeString": "enum TestContract.State"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 170,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "844:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 169,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "836:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 168,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "836:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 171,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "836:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            {
                              "typeIdentifier": "t_enum$_State_$143",
                              "typeString": "enum TestContract.State"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 163,
                          "name": "Badge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 153,
                          "src": "757:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Badge_$153_storage_ptr_$",
                            "typeString": "type(struct TestContract.Badge storage pointer)"
                          }
                        },
                        "id": 172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "id",
                          "price",
                          "status",
                          "badgeOwner"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "757:95:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Badge_$153_memory_ptr",
                          "typeString": "struct TestContract.Badge memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Badge_$153_memory_ptr",
                          "typeString": "struct TestContract.Badge memory"
                        }
                      ],
                      "expression": {
                        "id": 160,
                        "name": "badges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "745:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Badge_$153_storage_$dyn_storage",
                          "typeString": "struct TestContract.Badge storage ref[] storage ref"
                        }
                      },
                      "id": 162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "745:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Badge_$153_storage_$dyn_storage_ptr_$_t_struct$_Badge_$153_storage_$returns$__$bound_to$_t_array$_t_struct$_Badge_$153_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct TestContract.Badge storage ref[] storage pointer,struct TestContract.Badge storage ref)"
                      }
                    },
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "745:108:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "745:108:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "887:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          {
                            "hexValue": "313030303030",
                            "id": 180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "901:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000_by_1",
                              "typeString": "int_const 100000"
                            },
                            "value": "100000"
                          },
                          {
                            "expression": {
                              "id": 181,
                              "name": "State",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 143,
                              "src": "922:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_State_$143_$",
                                "typeString": "type(enum TestContract.State)"
                              }
                            },
                            "id": 182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Unowned",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 142,
                            "src": "922:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$143",
                              "typeString": "enum TestContract.State"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 185,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "961:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 184,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "953:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 183,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "953:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 186,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "953:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            {
                              "typeIdentifier": "t_rational_100000_by_1",
                              "typeString": "int_const 100000"
                            },
                            {
                              "typeIdentifier": "t_enum$_State_$143",
                              "typeString": "enum TestContract.State"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 178,
                          "name": "Badge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 153,
                          "src": "871:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Badge_$153_storage_ptr_$",
                            "typeString": "type(struct TestContract.Badge storage pointer)"
                          }
                        },
                        "id": 187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "id",
                          "price",
                          "status",
                          "badgeOwner"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "871:98:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Badge_$153_memory_ptr",
                          "typeString": "struct TestContract.Badge memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Badge_$153_memory_ptr",
                          "typeString": "struct TestContract.Badge memory"
                        }
                      ],
                      "expression": {
                        "id": 175,
                        "name": "badges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "859:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Badge_$153_storage_$dyn_storage",
                          "typeString": "struct TestContract.Badge storage ref[] storage ref"
                        }
                      },
                      "id": 177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "859:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Badge_$153_storage_$dyn_storage_ptr_$_t_struct$_Badge_$153_storage_$returns$__$bound_to$_t_array$_t_struct$_Badge_$153_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct TestContract.Badge storage ref[] storage pointer,struct TestContract.Badge storage ref)"
                      }
                    },
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "859:111:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 189,
                  "nodeType": "ExpressionStatement",
                  "src": "859:111:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1004:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          {
                            "hexValue": "31303030303030",
                            "id": 195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1018:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            },
                            "value": "1000000"
                          },
                          {
                            "expression": {
                              "id": 196,
                              "name": "State",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 143,
                              "src": "1040:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_State_$143_$",
                                "typeString": "type(enum TestContract.State)"
                              }
                            },
                            "id": 197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Unowned",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 142,
                            "src": "1040:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$143",
                              "typeString": "enum TestContract.State"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 200,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1079:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 199,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1071:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 198,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1071:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1071:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            },
                            {
                              "typeIdentifier": "t_enum$_State_$143",
                              "typeString": "enum TestContract.State"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 193,
                          "name": "Badge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 153,
                          "src": "988:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Badge_$153_storage_ptr_$",
                            "typeString": "type(struct TestContract.Badge storage pointer)"
                          }
                        },
                        "id": 202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "id",
                          "price",
                          "status",
                          "badgeOwner"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "988:99:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Badge_$153_memory_ptr",
                          "typeString": "struct TestContract.Badge memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Badge_$153_memory_ptr",
                          "typeString": "struct TestContract.Badge memory"
                        }
                      ],
                      "expression": {
                        "id": 190,
                        "name": "badges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "976:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Badge_$153_storage_$dyn_storage",
                          "typeString": "struct TestContract.Badge storage ref[] storage ref"
                        }
                      },
                      "id": 192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "976:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Badge_$153_storage_$dyn_storage_ptr_$_t_struct$_Badge_$153_storage_$returns$__$bound_to$_t_array$_t_struct$_Badge_$153_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct TestContract.Badge storage ref[] storage pointer,struct TestContract.Badge storage ref)"
                      }
                    },
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "976:112:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "976:112:2"
                }
              ]
            },
            "id": 206,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "737:2:2"
            },
            "returnParameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "740:0:2"
            },
            "scope": 541,
            "src": "726:367:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 212,
            "name": "ZoodleGifted",
            "nameLocation": "1103:12:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 208,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1124:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "1116:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1116:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 210,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "giftAmount",
                  "nameLocation": "1143:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "1135:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 209,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1135:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1115:39:2"
            },
            "src": "1097:58:2"
          },
          {
            "anonymous": false,
            "id": 218,
            "name": "ItemPurchase",
            "nameLocation": "1164:12:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 214,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "purchaser",
                  "nameLocation": "1185:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 218,
                  "src": "1177:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1177:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 216,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "1204:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 218,
                  "src": "1196:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 215,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1196:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1176:34:2"
            },
            "src": "1158:53:2"
          },
          {
            "anonymous": false,
            "id": 229,
            "name": "BadgeClaimed",
            "nameLocation": "1220:12:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 220,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1241:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 229,
                  "src": "1233:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 219,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1233:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 222,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "badgeId",
                  "nameLocation": "1256:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 229,
                  "src": "1248:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 221,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1248:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 225,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "1271:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 229,
                  "src": "1265:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$143",
                    "typeString": "enum TestContract.State"
                  },
                  "typeName": {
                    "id": 224,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 223,
                      "name": "State",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 143,
                      "src": "1265:5:2"
                    },
                    "referencedDeclaration": 143,
                    "src": "1265:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$143",
                      "typeString": "enum TestContract.State"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 227,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "1287:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 229,
                  "src": "1279:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 226,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1279:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1232:61:2"
            },
            "src": "1214:80:2"
          },
          {
            "body": {
              "id": 255,
              "nodeType": "Block",
              "src": "1325:118:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_State_$143",
                            "typeString": "enum TestContract.State"
                          },
                          "id": 240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 234,
                                "name": "badges",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 157,
                                "src": "1339:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Badge_$153_storage_$dyn_storage",
                                  "typeString": "struct TestContract.Badge storage ref[] storage ref"
                                }
                              },
                              "id": 236,
                              "indexExpression": {
                                "id": 235,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 231,
                                "src": "1346:2:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1339:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Badge_$153_storage",
                                "typeString": "struct TestContract.Badge storage ref"
                              }
                            },
                            "id": 237,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 150,
                            "src": "1339:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$143",
                              "typeString": "enum TestContract.State"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 238,
                              "name": "State",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 143,
                              "src": "1360:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_State_$143_$",
                                "typeString": "type(enum TestContract.State)"
                              }
                            },
                            "id": 239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Unowned",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 142,
                            "src": "1360:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$143",
                              "typeString": "enum TestContract.State"
                            }
                          },
                          "src": "1339:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 241,
                                "name": "badges",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 157,
                                "src": "1377:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Badge_$153_storage_$dyn_storage",
                                  "typeString": "struct TestContract.Badge storage ref[] storage ref"
                                }
                              },
                              "id": 243,
                              "indexExpression": {
                                "id": 242,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 231,
                                "src": "1384:2:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1377:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Badge_$153_storage",
                                "typeString": "struct TestContract.Badge storage ref"
                              }
                            },
                            "id": 244,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "badgeOwner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 152,
                            "src": "1377:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 247,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1410:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 246,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1402:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 245,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1402:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1402:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1377:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1339:73:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4261646765206973206f776e6564",
                        "id": 251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1414:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ca92dfa1569f43c2e3a55b5cc2c6800798cb1dfebd0b0f3d0a0b69772d23e8d6",
                          "typeString": "literal_string \"Badge is owned\""
                        },
                        "value": "Badge is owned"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ca92dfa1569f43c2e3a55b5cc2c6800798cb1dfebd0b0f3d0a0b69772d23e8d6",
                          "typeString": "literal_string \"Badge is owned\""
                        }
                      ],
                      "id": 233,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1331:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1331:100:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 253,
                  "nodeType": "ExpressionStatement",
                  "src": "1331:100:2"
                },
                {
                  "id": 254,
                  "nodeType": "PlaceholderStatement",
                  "src": "1437:1:2"
                }
              ]
            },
            "id": 256,
            "name": "isUnowned",
            "nameLocation": "1307:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 231,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1322:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "1317:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 230,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1317:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1316:9:2"
            },
            "src": "1298:145:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 277,
              "nodeType": "Block",
              "src": "1777:95:2",
              "statements": [
                {
                  "expression": {
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 266,
                        "name": "zoodleBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "1783:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 268,
                      "indexExpression": {
                        "id": 267,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 259,
                        "src": "1798:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1783:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 269,
                      "name": "giftAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 261,
                      "src": "1811:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1783:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 271,
                  "nodeType": "ExpressionStatement",
                  "src": "1783:38:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 273,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 259,
                        "src": "1845:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 274,
                        "name": "giftAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 261,
                        "src": "1856:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 272,
                      "name": "ZoodleGifted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 212,
                      "src": "1832:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1832:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 276,
                  "nodeType": "EmitStatement",
                  "src": "1827:40:2"
                }
              ]
            },
            "documentation": {
              "id": 257,
              "nodeType": "StructuredDocumentation",
              "src": "1447:252:2",
              "text": "@notice Used by the contract owner to gift an amount of zoodle to a user\n @dev used onlyOwner to make sure function is only accessed by owner\n @param recipient adress to recieve Zoodle\n @param giftAmount amount of Zoodle to be gifted"
            },
            "functionSelector": "b4fe5340",
            "id": 278,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 264,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 263,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "1768:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1768:9:2"
              }
            ],
            "name": "giftZoodle",
            "nameLocation": "1711:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 259,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1730:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 278,
                  "src": "1722:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 258,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1722:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 261,
                  "mutability": "mutable",
                  "name": "giftAmount",
                  "nameLocation": "1749:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 278,
                  "src": "1741:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 260,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1741:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1721:39:2"
            },
            "returnParameters": {
              "id": 265,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1777:0:2"
            },
            "scope": 541,
            "src": "1702:170:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 298,
              "nodeType": "Block",
              "src": "2023:88:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 285,
                            "name": "zoodleBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 140,
                            "src": "2036:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 288,
                          "indexExpression": {
                            "expression": {
                              "id": 286,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2051:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2051:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2036:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2065:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2036:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 284,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "2029:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2029:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 292,
                  "nodeType": "ExpressionStatement",
                  "src": "2029:38:2"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 293,
                      "name": "zoodleBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 140,
                      "src": "2080:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 296,
                    "indexExpression": {
                      "expression": {
                        "id": 294,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2095:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2095:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2080:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 283,
                  "id": 297,
                  "nodeType": "Return",
                  "src": "2073:33:2"
                }
              ]
            },
            "documentation": {
              "id": 279,
              "nodeType": "StructuredDocumentation",
              "src": "1878:93:2",
              "text": "@notice Used to retrieve the zoodle balance of a user\n @return the balance of a user"
            },
            "functionSelector": "bfad85e5",
            "id": 299,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getZoodle",
            "nameLocation": "1983:9:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 280,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1992:2:2"
            },
            "returnParameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 282,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 299,
                  "src": "2015:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 281,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2015:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2014:9:2"
            },
            "scope": 541,
            "src": "1974:137:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 312,
              "nodeType": "Block",
              "src": "2385:28:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 308,
                      "name": "badges",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157,
                      "src": "2398:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Badge_$153_storage_$dyn_storage",
                        "typeString": "struct TestContract.Badge storage ref[] storage ref"
                      }
                    },
                    "id": 310,
                    "indexExpression": {
                      "id": 309,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 302,
                      "src": "2405:2:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2398:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Badge_$153_storage",
                      "typeString": "struct TestContract.Badge storage ref"
                    }
                  },
                  "functionReturnParameters": 307,
                  "id": 311,
                  "nodeType": "Return",
                  "src": "2391:17:2"
                }
              ]
            },
            "documentation": {
              "id": 300,
              "nodeType": "StructuredDocumentation",
              "src": "2115:204:2",
              "text": "@notice Used to retrieve badge data\n @dev Can be used upon frontend load to populate badge data\n @param id the id of the badge that we want to retrieve data for\n @return a badge object"
            },
            "functionSelector": "8d838622",
            "id": 313,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBadge",
            "nameLocation": "2331:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 302,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2348:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 313,
                  "src": "2340:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2340:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2339:12:2"
            },
            "returnParameters": {
              "id": 307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 306,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 313,
                  "src": "2372:12:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Badge_$153_memory_ptr",
                    "typeString": "struct TestContract.Badge"
                  },
                  "typeName": {
                    "id": 305,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 304,
                      "name": "Badge",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 153,
                      "src": "2372:5:2"
                    },
                    "referencedDeclaration": 153,
                    "src": "2372:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Badge_$153_storage_ptr",
                      "typeString": "struct TestContract.Badge"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2371:14:2"
            },
            "scope": 541,
            "src": "2322:91:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 324,
              "nodeType": "Block",
              "src": "2636:42:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 319,
                      "name": "upgradeTotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 136,
                      "src": "2649:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 322,
                    "indexExpression": {
                      "expression": {
                        "id": 320,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2662:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2662:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2649:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 318,
                  "id": 323,
                  "nodeType": "Return",
                  "src": "2642:31:2"
                }
              ]
            },
            "documentation": {
              "id": 314,
              "nodeType": "StructuredDocumentation",
              "src": "2417:165:2",
              "text": "@notice Used to retrieve the mining power of a specific user\n @dev Can be used upon frontend to load mining power\n @return the mining power of the user"
            },
            "functionSelector": "695bd00c",
            "id": 325,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUpgrades",
            "nameLocation": "2594:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 315,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2605:2:2"
            },
            "returnParameters": {
              "id": 318,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 317,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 325,
                  "src": "2628:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 316,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2628:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2627:9:2"
            },
            "scope": 541,
            "src": "2585:93:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 347,
              "nodeType": "Block",
              "src": "2981:101:2",
              "statements": [
                {
                  "expression": {
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 333,
                        "name": "zoodleBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "2987:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 336,
                      "indexExpression": {
                        "expression": {
                          "id": 334,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3002:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3002:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2987:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 337,
                      "name": "zoodleAccrued",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 328,
                      "src": "3016:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2987:42:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 339,
                  "nodeType": "ExpressionStatement",
                  "src": "2987:42:2"
                },
                {
                  "expression": {
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 340,
                        "name": "upgradeTotal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 136,
                        "src": "3035:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 343,
                      "indexExpression": {
                        "expression": {
                          "id": 341,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3048:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3048:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3035:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 344,
                      "name": "upgradesAccrued",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 330,
                      "src": "3062:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3035:42:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 346,
                  "nodeType": "ExpressionStatement",
                  "src": "3035:42:2"
                }
              ]
            },
            "documentation": {
              "id": 326,
              "nodeType": "StructuredDocumentation",
              "src": "2682:221:2",
              "text": "@notice Used to save a users progress on the frontend\n @param zoodleAccrued the amount of zoodle the user mined on frontend\n @param upgradesAccrued the amount of mining power the user accrued on the frontend"
            },
            "functionSelector": "f055cf76",
            "id": 348,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "saveProfile",
            "nameLocation": "2915:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 328,
                  "mutability": "mutable",
                  "name": "zoodleAccrued",
                  "nameLocation": "2935:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 348,
                  "src": "2927:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 327,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2927:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 330,
                  "mutability": "mutable",
                  "name": "upgradesAccrued",
                  "nameLocation": "2958:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 348,
                  "src": "2950:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 329,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2950:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2926:48:2"
            },
            "returnParameters": {
              "id": 332,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2981:0:2"
            },
            "scope": 541,
            "src": "2906:176:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 382,
              "nodeType": "Block",
              "src": "3272:194:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 353,
                            "name": "zoodleBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 140,
                            "src": "3286:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 356,
                          "indexExpression": {
                            "expression": {
                              "id": 354,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3301:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3301:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3286:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3316:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "3286:33:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42616c616e6365206973206c657373207468616e20313030",
                        "id": 359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3321:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dd6426bca85c04495b9ec0e29ac3d57760204185c8dfb7452c2f86678998639b",
                          "typeString": "literal_string \"Balance is less than 100\""
                        },
                        "value": "Balance is less than 100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dd6426bca85c04495b9ec0e29ac3d57760204185c8dfb7452c2f86678998639b",
                          "typeString": "literal_string \"Balance is less than 100\""
                        }
                      ],
                      "id": 352,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3278:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3278:70:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 361,
                  "nodeType": "ExpressionStatement",
                  "src": "3278:70:2"
                },
                {
                  "expression": {
                    "id": 367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 362,
                        "name": "zoodleBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "3354:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 365,
                      "indexExpression": {
                        "expression": {
                          "id": 363,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3369:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3369:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3354:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "313030",
                      "id": 366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3384:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "3354:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 368,
                  "nodeType": "ExpressionStatement",
                  "src": "3354:33:2"
                },
                {
                  "expression": {
                    "id": 374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 369,
                        "name": "upgradeTotal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 136,
                        "src": "3393:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 372,
                      "indexExpression": {
                        "expression": {
                          "id": 370,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3406:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3406:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3393:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "35",
                      "id": 373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3420:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "src": "3393:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 375,
                  "nodeType": "ExpressionStatement",
                  "src": "3393:28:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 377,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3445:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3445:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3457:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "id": 376,
                      "name": "ItemPurchase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 218,
                      "src": "3432:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3432:29:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 381,
                  "nodeType": "EmitStatement",
                  "src": "3427:34:2"
                }
              ]
            },
            "documentation": {
              "id": 349,
              "nodeType": "StructuredDocumentation",
              "src": "3088:150:2",
              "text": "@notice Used to purchase item1 in the shop\n @dev require is used to make sure the user looking to purchase item has enough zoodle accumulated"
            },
            "functionSelector": "70fc63ae",
            "id": 383,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "purchaseItem1",
            "nameLocation": "3250:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 350,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3263:2:2"
            },
            "returnParameters": {
              "id": 351,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3272:0:2"
            },
            "scope": 541,
            "src": "3241:225:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 417,
              "nodeType": "Block",
              "src": "3654:200:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 388,
                            "name": "zoodleBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 140,
                            "src": "3668:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 391,
                          "indexExpression": {
                            "expression": {
                              "id": 389,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3683:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3683:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3668:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3698:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "3668:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42616c616e6365206973206c657373207468616e2031303030",
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3704:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_74e75d695ac64f334ab3691dd3394382a45b98fcd943c0a73e5cef47fe00a7af",
                          "typeString": "literal_string \"Balance is less than 1000\""
                        },
                        "value": "Balance is less than 1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_74e75d695ac64f334ab3691dd3394382a45b98fcd943c0a73e5cef47fe00a7af",
                          "typeString": "literal_string \"Balance is less than 1000\""
                        }
                      ],
                      "id": 387,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3660:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3660:72:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 396,
                  "nodeType": "ExpressionStatement",
                  "src": "3660:72:2"
                },
                {
                  "expression": {
                    "id": 402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 397,
                        "name": "zoodleBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "3738:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 400,
                      "indexExpression": {
                        "expression": {
                          "id": 398,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3753:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3753:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3738:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31303030",
                      "id": 401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3768:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000_by_1",
                        "typeString": "int_const 1000"
                      },
                      "value": "1000"
                    },
                    "src": "3738:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 403,
                  "nodeType": "ExpressionStatement",
                  "src": "3738:34:2"
                },
                {
                  "expression": {
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 404,
                        "name": "upgradeTotal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 136,
                        "src": "3778:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 407,
                      "indexExpression": {
                        "expression": {
                          "id": 405,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3791:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3791:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3778:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "3530",
                      "id": 408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3805:2:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50_by_1",
                        "typeString": "int_const 50"
                      },
                      "value": "50"
                    },
                    "src": "3778:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 410,
                  "nodeType": "ExpressionStatement",
                  "src": "3778:29:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 412,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3832:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3832:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3844:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "id": 411,
                      "name": "ItemPurchase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 218,
                      "src": "3819:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3819:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 416,
                  "nodeType": "EmitStatement",
                  "src": "3814:35:2"
                }
              ]
            },
            "documentation": {
              "id": 384,
              "nodeType": "StructuredDocumentation",
              "src": "3470:150:2",
              "text": "@notice Used to purchase item2 in the shop\n @dev require is used to make sure the user looking to purchase item has enough zoodle accumulated"
            },
            "functionSelector": "4e7d1856",
            "id": 418,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "purchaseItem2",
            "nameLocation": "3632:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 385,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3645:2:2"
            },
            "returnParameters": {
              "id": 386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3654:0:2"
            },
            "scope": 541,
            "src": "3623:231:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 452,
              "nodeType": "Block",
              "src": "4042:209:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 423,
                            "name": "zoodleBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 140,
                            "src": "4056:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 426,
                          "indexExpression": {
                            "expression": {
                              "id": 424,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4071:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 425,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4071:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4056:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "313030303030",
                          "id": 427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4086:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          },
                          "value": "100000"
                        },
                        "src": "4056:36:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42616c616e6365206973206c657373207468616e20313030303030",
                        "id": 429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4094:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b45568aa80c97b0bb500ac65ea65976d37e72e49aceb554ad05e27c373b05d77",
                          "typeString": "literal_string \"Balance is less than 100000\""
                        },
                        "value": "Balance is less than 100000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b45568aa80c97b0bb500ac65ea65976d37e72e49aceb554ad05e27c373b05d77",
                          "typeString": "literal_string \"Balance is less than 100000\""
                        }
                      ],
                      "id": 422,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4048:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4048:76:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 431,
                  "nodeType": "ExpressionStatement",
                  "src": "4048:76:2"
                },
                {
                  "expression": {
                    "id": 437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 432,
                        "name": "zoodleBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "4130:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 435,
                      "indexExpression": {
                        "expression": {
                          "id": 433,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4145:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4145:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4130:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "313030303030",
                      "id": 436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4160:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000_by_1",
                        "typeString": "int_const 100000"
                      },
                      "value": "100000"
                    },
                    "src": "4130:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 438,
                  "nodeType": "ExpressionStatement",
                  "src": "4130:36:2"
                },
                {
                  "expression": {
                    "id": 444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 439,
                        "name": "upgradeTotal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 136,
                        "src": "4172:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 442,
                      "indexExpression": {
                        "expression": {
                          "id": 440,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4185:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4185:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4172:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "353030",
                      "id": 443,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4199:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_500_by_1",
                        "typeString": "int_const 500"
                      },
                      "value": "500"
                    },
                    "src": "4172:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 445,
                  "nodeType": "ExpressionStatement",
                  "src": "4172:30:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 447,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4227:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4227:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030303030",
                        "id": 449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4239:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        }
                      ],
                      "id": 446,
                      "name": "ItemPurchase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 218,
                      "src": "4214:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4214:32:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 451,
                  "nodeType": "EmitStatement",
                  "src": "4209:37:2"
                }
              ]
            },
            "documentation": {
              "id": 419,
              "nodeType": "StructuredDocumentation",
              "src": "3858:150:2",
              "text": "@notice Used to purchase item3 in the shop\n @dev require is used to make sure the user looking to purchase item has enough zoodle accumulated"
            },
            "functionSelector": "c8d7cafd",
            "id": 453,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "purchaseItem3",
            "nameLocation": "4020:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4033:2:2"
            },
            "returnParameters": {
              "id": 421,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4042:0:2"
            },
            "scope": 541,
            "src": "4011:240:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 487,
              "nodeType": "Block",
              "src": "4439:213:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 458,
                            "name": "zoodleBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 140,
                            "src": "4453:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 461,
                          "indexExpression": {
                            "expression": {
                              "id": 459,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4468:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 460,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4468:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4453:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "31303030303030",
                          "id": 462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4483:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "value": "1000000"
                        },
                        "src": "4453:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42616c616e6365206973206c657373207468616e2031303030303030",
                        "id": 464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4492:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cd739708401f46218dc1095f4a474a347b3b088ed77f1e1b81dd28cd51ec3151",
                          "typeString": "literal_string \"Balance is less than 1000000\""
                        },
                        "value": "Balance is less than 1000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cd739708401f46218dc1095f4a474a347b3b088ed77f1e1b81dd28cd51ec3151",
                          "typeString": "literal_string \"Balance is less than 1000000\""
                        }
                      ],
                      "id": 457,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4445:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4445:78:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 466,
                  "nodeType": "ExpressionStatement",
                  "src": "4445:78:2"
                },
                {
                  "expression": {
                    "id": 472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 467,
                        "name": "zoodleBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 140,
                        "src": "4529:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 470,
                      "indexExpression": {
                        "expression": {
                          "id": 468,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4544:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4544:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4529:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31303030303030",
                      "id": 471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4559:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      },
                      "value": "1000000"
                    },
                    "src": "4529:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 473,
                  "nodeType": "ExpressionStatement",
                  "src": "4529:37:2"
                },
                {
                  "expression": {
                    "id": 479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 474,
                        "name": "upgradeTotal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 136,
                        "src": "4572:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 477,
                      "indexExpression": {
                        "expression": {
                          "id": 475,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4585:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4585:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4572:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "35303030",
                      "id": 478,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4599:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5000_by_1",
                        "typeString": "int_const 5000"
                      },
                      "value": "5000"
                    },
                    "src": "4572:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 480,
                  "nodeType": "ExpressionStatement",
                  "src": "4572:31:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 482,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4627:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4627:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030303030",
                        "id": 484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4639:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "value": "1000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "id": 481,
                      "name": "ItemPurchase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 218,
                      "src": "4614:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4614:33:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 486,
                  "nodeType": "EmitStatement",
                  "src": "4609:38:2"
                }
              ]
            },
            "documentation": {
              "id": 454,
              "nodeType": "StructuredDocumentation",
              "src": "4255:150:2",
              "text": "@notice Used to purchase item4 in the shop\n @dev require is used to make sure the user looking to purchase item has enough zoodle accumulated"
            },
            "functionSelector": "9f43203a",
            "id": 488,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "purchaseItem4",
            "nameLocation": "4417:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 455,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4430:2:2"
            },
            "returnParameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4439:0:2"
            },
            "scope": 541,
            "src": "4408:244:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 539,
              "nodeType": "Block",
              "src": "4908:218:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 498,
                            "name": "zoodleBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 140,
                            "src": "4922:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 501,
                          "indexExpression": {
                            "expression": {
                              "id": 499,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4937:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 500,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4937:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4922:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 502,
                              "name": "badges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 157,
                              "src": "4952:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Badge_$153_storage_$dyn_storage",
                                "typeString": "struct TestContract.Badge storage ref[] storage ref"
                              }
                            },
                            "id": 504,
                            "indexExpression": {
                              "id": 503,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 491,
                              "src": "4959:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4952:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Badge_$153_storage",
                              "typeString": "struct TestContract.Badge storage ref"
                            }
                          },
                          "id": 505,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 147,
                          "src": "4952:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4922:46:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 497,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4914:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4914:55:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 508,
                  "nodeType": "ExpressionStatement",
                  "src": "4914:55:2"
                },
                {
                  "expression": {
                    "id": 515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 509,
                          "name": "badges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157,
                          "src": "4975:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Badge_$153_storage_$dyn_storage",
                            "typeString": "struct TestContract.Badge storage ref[] storage ref"
                          }
                        },
                        "id": 511,
                        "indexExpression": {
                          "id": 510,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 491,
                          "src": "4982:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4975:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Badge_$153_storage",
                          "typeString": "struct TestContract.Badge storage ref"
                        }
                      },
                      "id": 512,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 150,
                      "src": "4975:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$143",
                        "typeString": "enum TestContract.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 513,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "4995:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$143_$",
                          "typeString": "type(enum TestContract.State)"
                        }
                      },
                      "id": 514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Owned",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 141,
                      "src": "4995:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$143",
                        "typeString": "enum TestContract.State"
                      }
                    },
                    "src": "4975:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$143",
                      "typeString": "enum TestContract.State"
                    }
                  },
                  "id": 516,
                  "nodeType": "ExpressionStatement",
                  "src": "4975:31:2"
                },
                {
                  "expression": {
                    "id": 523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 517,
                          "name": "badges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157,
                          "src": "5012:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Badge_$153_storage_$dyn_storage",
                            "typeString": "struct TestContract.Badge storage ref[] storage ref"
                          }
                        },
                        "id": 519,
                        "indexExpression": {
                          "id": 518,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 491,
                          "src": "5019:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5012:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Badge_$153_storage",
                          "typeString": "struct TestContract.Badge storage ref"
                        }
                      },
                      "id": 520,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "badgeOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 152,
                      "src": "5012:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 521,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "5036:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5036:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5012:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 524,
                  "nodeType": "ExpressionStatement",
                  "src": "5012:34:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 526,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5070:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5070:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 528,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 491,
                        "src": "5082:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 529,
                            "name": "badges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 157,
                            "src": "5086:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Badge_$153_storage_$dyn_storage",
                              "typeString": "struct TestContract.Badge storage ref[] storage ref"
                            }
                          },
                          "id": 531,
                          "indexExpression": {
                            "id": 530,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 491,
                            "src": "5093:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5086:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Badge_$153_storage",
                            "typeString": "struct TestContract.Badge storage ref"
                          }
                        },
                        "id": 532,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "status",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 150,
                        "src": "5086:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$143",
                          "typeString": "enum TestContract.State"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 533,
                            "name": "badges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 157,
                            "src": "5104:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Badge_$153_storage_$dyn_storage",
                              "typeString": "struct TestContract.Badge storage ref[] storage ref"
                            }
                          },
                          "id": 535,
                          "indexExpression": {
                            "id": 534,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 491,
                            "src": "5111:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5104:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Badge_$153_storage",
                            "typeString": "struct TestContract.Badge storage ref"
                          }
                        },
                        "id": 536,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 147,
                        "src": "5104:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_State_$143",
                          "typeString": "enum TestContract.State"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 525,
                      "name": "BadgeClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 229,
                      "src": "5057:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_enum$_State_$143_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,enum TestContract.State,uint256)"
                      }
                    },
                    "id": 537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5057:64:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 538,
                  "nodeType": "EmitStatement",
                  "src": "5052:69:2"
                }
              ]
            },
            "documentation": {
              "id": 489,
              "nodeType": "StructuredDocumentation",
              "src": "4656:197:2",
              "text": "@notice Used to claim a badge\n @dev require is used to make sure the user looking to claim the badge has enough Zoodle\n @param id the id of the badge that the user is looking to claim"
            },
            "functionSelector": "23415135",
            "id": 540,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 494,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 491,
                    "src": "4905:2:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 495,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 493,
                  "name": "isUnowned",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 256,
                  "src": "4895:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "4895:13:2"
              }
            ],
            "name": "claimBadge",
            "nameLocation": "4865:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 491,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "4884:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 540,
                  "src": "4876:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 490,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4876:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4875:12:2"
            },
            "returnParameters": {
              "id": 496,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4908:0:2"
            },
            "scope": 541,
            "src": "4856:270:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 542,
        "src": "386:4743:2",
        "usedErrors": []
      }
    ],
    "src": "32:5098:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x2619fffd045511b5e0f7ed9cf3627d7fa11dc55759a5e3c60d416888c2f43bff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "badgeId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "enum TestContract.State",
              "name": "status",
              "type": "uint8"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "name": "BadgeClaimed",
          "type": "event"
        },
        "0x9ae886e6a396303cbbd33e367618060d268b3bcedbca31515ee88237cbc5d7eb": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "purchaser",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "name": "ItemPurchase",
          "type": "event"
        },
        "0xd1fbe3b57f68f82076d87d0e76dde1745fae8ac6e7a3ff7e2ae52264d224f7cf": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "giftAmount",
              "type": "uint256"
            }
          ],
          "name": "ZoodleGifted",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x739614aE3445C12cfB9AAF3a947E8c6cf577901D",
      "transactionHash": "0xcf753156c7821f0ab5139db5217bba8f14488aadda3dc30f579a188a66847068"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0x3545eF4FD291E6Ac4884abB7AE64AE3Ada19Ef84",
      "transactionHash": "0xb572b7ee47f3be804e510399ccca97244b150d3965aed845f6c971e2ce3745a9"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-11-30T23:21:21.531Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "Alexander R. D'Alessandro",
    "custom:experimental": "This is an experimental contract.",
    "details": "All function calls are currently implemented without side effects",
    "kind": "dev",
    "methods": {
      "claimBadge(uint256)": {
        "details": "require is used to make sure the user looking to claim the badge has enough Zoodle",
        "params": {
          "id": "the id of the badge that the user is looking to claim"
        }
      },
      "getBadge(uint256)": {
        "details": "Can be used upon frontend load to populate badge data",
        "params": {
          "id": "the id of the badge that we want to retrieve data for"
        },
        "returns": {
          "_0": "a badge object"
        }
      },
      "getUpgrades()": {
        "details": "Can be used upon frontend to load mining power",
        "returns": {
          "_0": "the mining power of the user"
        }
      },
      "getZoodle()": {
        "returns": {
          "_0": "the balance of a user"
        }
      },
      "giftZoodle(address,uint256)": {
        "details": "used onlyOwner to make sure function is only accessed by owner",
        "params": {
          "giftAmount": "amount of Zoodle to be gifted",
          "recipient": "adress to recieve Zoodle"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "purchaseItem1()": {
        "details": "require is used to make sure the user looking to purchase item has enough zoodle accumulated"
      },
      "purchaseItem2()": {
        "details": "require is used to make sure the user looking to purchase item has enough zoodle accumulated"
      },
      "purchaseItem3()": {
        "details": "require is used to make sure the user looking to purchase item has enough zoodle accumulated"
      },
      "purchaseItem4()": {
        "details": "require is used to make sure the user looking to purchase item has enough zoodle accumulated"
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "saveProfile(uint256,uint256)": {
        "params": {
          "upgradesAccrued": "the amount of mining power the user accrued on the frontend",
          "zoodleAccrued": "the amount of zoodle the user mined on frontend"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "A contract for managing user profiles for the blockchain based game Zoodle Clicker",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "claimBadge(uint256)": {
        "notice": "Used to claim a badge"
      },
      "getBadge(uint256)": {
        "notice": "Used to retrieve badge data"
      },
      "getUpgrades()": {
        "notice": "Used to retrieve the mining power of a specific user"
      },
      "getZoodle()": {
        "notice": "Used to retrieve the zoodle balance of a user"
      },
      "giftZoodle(address,uint256)": {
        "notice": "Used by the contract owner to gift an amount of zoodle to a user"
      },
      "purchaseItem1()": {
        "notice": "Used to purchase item1 in the shop"
      },
      "purchaseItem2()": {
        "notice": "Used to purchase item2 in the shop"
      },
      "purchaseItem3()": {
        "notice": "Used to purchase item3 in the shop"
      },
      "purchaseItem4()": {
        "notice": "Used to purchase item4 in the shop"
      },
      "saveProfile(uint256,uint256)": {
        "notice": "Used to save a users progress on the frontend"
      }
    },
    "version": 1
  }
}